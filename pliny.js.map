{"version":3,"file":"pliny.js","sources":["src/client/index.js"],"sourcesContent":["// BEGIN PLINY\n\n// Walks through dot-accessors to retrieve an object out of a root object.\n//\n// @param {Object} bag - the root object.\n// @param {String} name - a period-delimited list of object accessors, naming the object we want to access.\n// @returns {Object} - the object we asked for, or undefined, if it doesn't exist.\nfunction openBag(bag, name) {\n  // Break up the object path, then recurse through objects until we either run\n  // out of objects or find the one we're looking for.\n  return name\n    .split(\".\")\n    .reduce((obj, p) => obj[p], bag);\n}\n\n\nfunction hash(buf) {\n  let s1 = 1, s2 = 0;\n  buf.split(\"\")\n    .forEach((c) => {\n      s1 = (s1 + c.charCodeAt(0)) % 32771;\n      s2 = (s2 + s1) % 32771;\n    });\n\n  return s2 << 8 | s1;\n}\n\n/////\n// Fills in intermediate levels of an object tree to make the full object tree\n// accessible, in the documentation database.\n//\n// @param {String} name - a period-delimited list of object accessors, naming the object we want to fill in.\n// @param {Object} rootObject - the object on which to fill in values.\n// @returns {Object} - the leaf-level filled-in object.\n///\nfunction fillBag(name) {\n  // Start at the top level.\n  var bag = database;\n  if (typeof name !== \"undefined\" && name.length > 0) {\n    // Break up the object path.\n    var parts = name.split(\".\"),\n\n      // We'll be rebuilding the path as we go, so we can name intermediate objects.\n      path = \"\",\n\n      // The first time we extend the path, it doesn't get a period seperator.\n      sep = \"\";\n    // Walk through the object tree.\n    for (var i = 0; i < parts.length; ++i) {\n      // Fill in any missing objects.\n      if (typeof bag[parts[i]] === \"undefined\") {\n        bag[parts[i]] = {};\n      }\n\n      path += sep + parts[i];\n      sep = \".\";\n\n      // Drill down into the tree.\n      bag = bag[parts[i]];\n\n      // If we have a name, and the object hasn't already been named, then we\n      // give it a name.\n      if (path.length > 0 && !bag.name) {\n        bag.name = path;\n      }\n    }\n  }\n  return bag;\n}\n\n/////\n// Reads the documentation metadata and builds up the documentation database.\n//\n// @param {String} fieldType - the name of the type of object for which we're reading metadata: function, class, namespace, etc.\n// @param {String} info - the metadata object the user provided us.\n///\nfunction analyzeObject(fieldType, info) {\n  var i;\n  // If the user didn't supply a type for the metadata object, we infer it\n  // from context.\n  if (typeof info.fieldType === 'undefined') {\n    info.fieldType = fieldType;\n  }\n\n  // Find out where we're going to store the object in the metadata database and where in the parent object we're going to store the documentation object.\n  var parentBag = fillBag(info.parent || \"\"),\n  pluralName = fieldType + \"s\";\n  pluralName = pluralName.replace(/ys$/, \"ies\")\n  .replace(/ss$/, \"ses\");\n  if (!parentBag[pluralName]) {\n    parentBag[pluralName] = [];\n  }\n  var arr = parentBag[pluralName];\n\n  // Make sure we haven't already stored an object by this name.\n  var found = false;\n  for (i = 0; i < arr.length; ++i) {\n    if (arr[i].name === info.name) {\n      found = true;\n    }\n  }\n\n  if (!found) {\n    var subArrays = {};\n\n    [\"examples\", \"issues\", \"comments\"].forEach(function (k) {\n      if (typeof info[k] !== \"undefined\") {\n        subArrays[k] = info[k];\n        delete info[k];\n      }\n    });\n\n    // After we copy the metadata, we get back the documentation database object\n    // that will store the fuller data we get from other objects.\n    info = copyObjectMetadata(info);\n\n    arr.push(info);\n\n    // Handle other parent-child relationships.\n    if (info.fieldType === \"class\" && info.baseClass) {\n      if (info.parent === undefined) {\n        info.parent = info.baseClass;\n      }\n      pliny[\"subClass\"](info);\n    }\n\n    for (var k in subArrays) {\n      var subArr = subArrays[k],\n      type = k.substring(0, k.length - 1);\n      for (i = 0; i < subArr.length; ++i) {\n        if (subArr[i].parent === undefined) {\n          subArr[i].parent = info.fullName.replace(/::/g, \".\");\n        }\n        pliny[type](subArr[i]);\n      }\n    }\n  }\n}\n\n/////\n// Copies all of the data the user entered for metadata to the documetation\n// object in the documentation database.\n//\n// @param {String} name - a period-delimited list of object accessors, naming the documentation object we want to create.\n// @param {Object} info - the metadata object from the user.\n// @returns the documentation object that we created.\n///\nfunction copyObjectMetadata(info) {\n  var fullName = (info.parent && info.parent + \".\" || \"\") + info.name,\n  bag = fillBag(fullName);\n\n  // Make sure we aren't setting the data for a second time.\n  if (!bag.fieldType) {\n\n    // Copy all the fields! ALL THE FIELDS!\n    // TODO: don't copy metadata directly to bag object. The bag objects are used\n    // as the search path for finding code objects, and some of the metadata field\n    // names might clash with code object field names. Maybe have a new metadata\n    // table.\n    for (var k in info) {\n      bag[k] = info[k];\n    }\n\n    // The fullName is used in titles on documentation articles.\n    if (!bag.fullName) {\n      if (bag.fieldType === \"issue\") {\n        Object.defineProperty(bag, \"issueID\", {\n          get: function get() {\n            return hash(this.parent + \".\" + this.name);\n          }\n        });\n      }\n      Object.defineProperty(bag, \"fullName\", {\n        get: function get() {\n          var output = \"\";\n          if (this.parent) {\n            output += this.parent;\n\n            // Print the seperator between the parent identifier and the name of\n            // the object.\n            if (this.fieldType === \"method\" || this.fieldType === \"property\" || this.fieldType === \"event\") {\n              // Methods, properties, and events aren't invokable from their class\n              // objects, so print them in a different way that doesn't suggest you\n              // can dot-access them. I'm using the typical C++ notation for member\n              // fields here.\n              output += \"::\";\n            }\n            else if (this.fieldType === \"example\" || this.fieldType === \"issue\") {\n              output += \": \";\n            }\n            else {\n              output += \".\";\n            }\n          }\n          output += this.name;\n          return output;\n        }\n      });\n    }\n\n    // The ID is used to make DOM elements.\n    if (!bag.id) {\n      Object.defineProperty(bag, \"id\", {\n        get: function get() {\n          return this.fullName.replace(/(\\.|:)/g, \"_\")\n          .replace(/ /g, \"\");\n        }\n      });\n    }\n\n    // We try to see if the real object exists yet (whether the documentation\n    // before or after the object it is documenting). If it doesn't, then we\n    // wait a small amount of time for the rest of the script to execute and\n    // then pick up where we left off.\n    if (!setContextualHelp(fullName)) {\n      // The setTimeout is to allow the script to continue to load after this\n      // particular function has called, so that more of the script can be\n      // inspected.\n      setTimeout(setContextualHelp, 1, fullName);\n    }\n  }\n  return bag;\n}\n\nfunction setEnumerationValues(name) {\n  var enumeration = null;\n  try {\n    enumeration = require(name);\n  }\n  catch (exp) {\n    enumeration = null;\n  }\n  if (!enumeration) {\n    setTimeout(setEnumerationValues, 1, name);\n  }\n  else {\n    for (var key in enumeration) {\n      var val = enumeration[key];\n      if (enumeration.hasOwnProperty(key) && typeof val === \"number\") {\n        pliny[\"value\"]({\n          parent: name,\n          name: key,\n          type: \"Number\",\n          description: val.toString(),\n          value: val\n        });\n      }\n    }\n  }\n}\n\nconst scriptPattern = /\\bpliny\\s*\\.\\s*(\\w+)/gm;\n/////\n// Finds the actual object in the scope hierarchy, and looks for contextual scripts that might be defined in this object\n//\n// @param {String} name - a period-delimited list of object accessors, naming the real object we want to access.\n// @returns {Object} - the actual object the name refers to, or undefined if such an object exists.\n///\nfunction setContextualHelp(name) {\n  // Find the real object\n  var obj = openBag(database, name);\n  if (obj) {\n    if (obj.fieldType === \"enumeration\") {\n      setEnumerationValues(obj.parent + \".\" + obj.name);\n    }\n    // Look for contextual scripts\n    if (typeof obj === \"function\") {\n      var script = obj.toString(),\n      match = null;\n      while (!!(match = scriptPattern.exec(script))) {\n        var fieldType = match[1],\n        start = match.index + match[0].length,\n        fieldInfo = getFieldInfo(script.substring(start));\n        // Shove in the context.\n        if (fieldInfo.parent === undefined) {\n          fieldInfo.parent = name;\n        }\n\n        // And follow the normal documentation path.\n        pliny[fieldType].call(null, fieldInfo);\n      }\n    }\n  }\n  return obj;\n}\n\n/////\n// When a documentation script is included inside of a function, we need to\n// read the script and parse out the JSON objects so we can later execute\n// the documentation function safely, i.e. not use eval().\n//\n// @param {String} script - the source code of the containing function.\n// @return {Array} - a list of JSON-parsed objects that are the parameters specified at the documentation function call-site (i.e. sans context)\n///\nfunction getFieldInfo(script) {\n  var parameters = [],\n  start = 0,\n  scopeLevel = 0,\n  inString = false,\n  stringToken = null;\n\n  // Walk over the script...\n  for (var i = 0; i < script.length; ++i) {\n    // ... a character at a time\n    var c = script.charAt(i);\n\n    // Keep track of whether or not we're in a string. We're looking for any\n    // quotation marks that are either at the beginning of the string or have\n    // not previously been escaped by a backslash...\n    if ((inString && c === stringToken || !inString && (c === '\"' || c === \"'\")) && (i === 0 || script.charAt(i - 1) !== '\\\\')) {\n      inString = !inString;\n      if (inString) {\n        stringToken = c;\n      }\n    }\n\n    // ... because only then...\n    if (!inString) {\n      // ... can we change scope level. We're only supporting JSON objects,\n      // so no need to go any further than this.\n      if (c === '(' || c === '{' || c === '[') {\n        ++scopeLevel;\n      }\n      else if (c === ')' || c === '}' || c === ']') {\n        --scopeLevel;\n      }\n    }\n\n    // If we've exited the parameter list, or we're inside the parameter list\n    // and see a comma that is not inside of a string literal...\n    if (scopeLevel === 0 || scopeLevel === 1 && c === ',' && !inString) {\n      // ... save the parameter, skipping the first character because it's always\n      // either the open paren for the parameter list or one of the commas\n      // between parameters.\n      parameters.push(parseParameter(script.substring(start + 1, i)\n        .trim()));\n\n      // Advance forward the start of the next token.\n      start = i;\n\n      // If we left the parameter list, we've found all of the parameters and\n      // can quit out of the loop before we get to the end of the script.\n      if (scopeLevel === 0) {\n        break;\n      }\n    }\n  }\n  if (parameters.length !== 1) {\n    throw new Error(\"There should have only been one parameter to the function\");\n  }\n  return parameters[0];\n}\n\n/////\n// When we've found an individual parameter to a documentation function in a\n// contextual scope, we need to make sure it's valid JSON before we try to\n// convert it to a real JavaScript object.\n//\n// @param {String} script - the subscript portion that refers to a single parameter.\n// @return {Object} - the value that the string represents, parsed with JSON.parse().\n///\nfunction parseParameter(script) {\n  // Make sure all hash key labels are surrounded in quotation marks.\n  const stringLiterals = [],\n    litReplace = (str) => {\n      var name = \"&STRING_LIT\" + stringLiterals.length + \";\";\n      if (str[0] === \"'\") {\n        str = str.replace(/\\\\\"/g, \"&_DBLQUOTE_;\")\n        .replace(/\\\\'/g, \"&_SGLQUOTE_;\")\n        .replace(/\"/g, \"\\\\\\\"\")\n        .replace(/'/g, \"\\\"\")\n        .replace(/&_DBLQUOTE_;/g, \"\\\\\\\"\")\n        .replace(/&_SGLQUOTE_;/g, \"\\\\'\");\n      }\n      stringLiterals.push(str);\n      return name;\n    },\n    litReturn = (a, b) => stringLiterals[b],\n      param = script.replace(/'(\\\\'|[^'])+'/g, litReplace)\n        .replace(/\"(\\\\\"|[^\"])+\"/g, litReplace)\n        .replace(/\\b(\\w+)\\b\\s*:/g, \"\\\"$1\\\":\")\n        .replace(/&STRING_LIT(\\d+);/g, litReturn)\n        .replace(/&STRING_LIT(\\d+);/g, litReturn)\n        .replace(/\\\\\\r?\\n/g, \"\");\n  return JSON.parse(param);\n}\n\n  // The default storage location.\nconst database = {\n  fieldType: \"database\",\n  fullName: \"[Global]\",\n  id: \"Global\",\n  description: \"These are the elements in the global namespace.\"\n};\n\n// Create documentation functions for each of the supported types of code objects.\nconst recorders = [\n  \"namespace\",\n  \"event\",\n  \"function\",\n  \"value\",\n  \"class\",\n  \"property\",\n  \"method\",\n  \"enumeration\",\n  \"record\",\n  \"subClass\",\n  \"example\",\n  \"error\",\n  \"issue\",\n  \"comment\"\n].reduce(function (obj, k) {\n  obj[k] = analyzeObject.bind(null, k);\n  return obj;\n}, {});\n\nconst pliny = Object.assign({\n\n}, recorders, {\n  database,\n  get(id) {\n    return openBag(database, id);\n  }\n})\n\nexport default pliny;\n\n// END PLINY\n"],"names":[],"mappings":"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"}