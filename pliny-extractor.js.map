{"version":3,"file":"pliny-extractor.js","sources":["node_modules/filename-regex/index.js","node_modules/arr-flatten/index.js","node_modules/arr-diff/index.js","node_modules/array-unique/index.js","node_modules/isarray/index.js","node_modules/isobject/index.js","node_modules/is-buffer/index.js","node_modules/kind-of/index.js","node_modules/is-number/index.js","node_modules/randomatic/node_modules/is-number/node_modules/kind-of/index.js","node_modules/randomatic/node_modules/is-number/index.js","node_modules/randomatic/node_modules/kind-of/index.js","node_modules/randomatic/index.js","node_modules/repeat-string/index.js","node_modules/repeat-element/index.js","node_modules/fill-range/index.js","node_modules/expand-range/index.js","node_modules/preserve/index.js","node_modules/braces/index.js","node_modules/is-posix-bracket/index.js","node_modules/expand-brackets/index.js","node_modules/is-extglob/index.js","node_modules/extglob/index.js","node_modules/is-glob/index.js","node_modules/remove-trailing-separator/index.js","node_modules/normalize-path/index.js","node_modules/is-extendable/index.js","node_modules/for-in/index.js","node_modules/for-own/index.js","node_modules/object.omit/index.js","node_modules/glob-parent/index.js","node_modules/glob-base/index.js","node_modules/is-dotfile/index.js","node_modules/parse-glob/index.js","node_modules/is-primitive/index.js","node_modules/is-equal-shallow/index.js","node_modules/regex-cache/index.js","node_modules/micromatch/lib/utils.js","node_modules/micromatch/lib/chars.js","node_modules/micromatch/lib/glob.js","node_modules/micromatch/lib/expand.js","node_modules/micromatch/index.js","node_modules/rollup-pluginutils/dist/pluginutils.es.js","src/extractor/extract.js","src/extractor/index.js"],"sourcesContent":["/*!\n * filename-regex <https://github.com/regexps/filename-regex>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert\n * Licensed under the MIT license.\n */\n\nmodule.exports = function filenameRegex() {\n  return /([^\\\\\\/]+)$/;\n};\n","/*!\n * arr-flatten <https://github.com/jonschlinkert/arr-flatten>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function flatten(arr) {\n  return flat(arr, []);\n};\n\nfunction flat(arr, acc) {\n  var len = arr.length;\n  var idx = -1;\n\n  while (++idx < len) {\n    var cur = arr[idx];\n    if (Array.isArray(cur)) {\n      flat(cur, acc);\n    } else {\n      acc.push(cur);\n    }\n  }\n  return acc;\n}\n","/*!\n * arr-diff <https://github.com/jonschlinkert/arr-diff>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT License\n */\n\n'use strict';\n\nvar flatten = require('arr-flatten');\nvar slice = [].slice;\n\n/**\n * Return the difference between the first array and\n * additional arrays.\n *\n * ```js\n * var diff = require('{%= name %}');\n *\n * var a = ['a', 'b', 'c', 'd'];\n * var b = ['b', 'c'];\n *\n * console.log(diff(a, b))\n * //=> ['a', 'd']\n * ```\n *\n * @param  {Array} `a`\n * @param  {Array} `b`\n * @return {Array}\n * @api public\n */\n\nfunction diff(arr, arrays) {\n  var argsLen = arguments.length;\n  var len = arr.length, i = -1;\n  var res = [], arrays;\n\n  if (argsLen === 1) {\n    return arr;\n  }\n\n  if (argsLen > 2) {\n    arrays = flatten(slice.call(arguments, 1));\n  }\n\n  while (++i < len) {\n    if (!~arrays.indexOf(arr[i])) {\n      res.push(arr[i]);\n    }\n  }\n  return res;\n}\n\n/**\n * Expose `diff`\n */\n\nmodule.exports = diff;\n","/*!\n * array-unique <https://github.com/jonschlinkert/array-unique>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function unique(arr) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('array-unique expects an array.');\n  }\n\n  var len = arr.length;\n  var i = -1;\n\n  while (i++ < len) {\n    var j = i + 1;\n\n    for (; j < arr.length; ++j) {\n      if (arr[i] === arr[j]) {\n        arr.splice(j--, 1);\n      }\n    }\n  }\n  return arr;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isArray = require('isarray');\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && isArray(val) === false;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var isBuffer = require('is-buffer');\nvar toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  // primitivies\n  if (typeof val === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (typeof val === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (typeof val === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (typeof val === 'function' || val instanceof Function) {\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  var type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n  if (type === '[object Error]') {\n    return 'error';\n  }\n\n  // buffer\n  if (isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n\n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function isNumber(num) {\n  var type = typeOf(num);\n  if (type !== 'number' && type !== 'string') {\n    return false;\n  }\n  var n = +num;\n  return (n - n + 1) >= 0 && num !== '';\n};\n","var isBuffer = require('is-buffer');\nvar toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  // primitivies\n  if (typeof val === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (typeof val === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (typeof val === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (typeof val === 'function' || val instanceof Function) {\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  var type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n  if (type === '[object Error]') {\n    return 'error';\n  }\n\n  // buffer\n  if (isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n\n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function isNumber(num) {\n  var type = typeOf(num);\n\n  if (type === 'string') {\n    if (!num.trim()) return false;\n  } else if (type !== 'number') {\n    return false;\n  }\n\n  return (num - num + 1) >= 0;\n};\n","var isBuffer = require('is-buffer');\nvar toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  // primitivies\n  if (typeof val === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (typeof val === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (typeof val === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (typeof val === 'function' || val instanceof Function) {\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  var type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n  if (type === '[object Error]') {\n    return 'error';\n  }\n  if (type === '[object Promise]') {\n    return 'promise';\n  }\n\n  // buffer\n  if (isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n\n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n","/*!\n * randomatic <https://github.com/jonschlinkert/randomatic>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isNumber = require('is-number');\nvar typeOf = require('kind-of');\n\n/**\n * Expose `randomatic`\n */\n\nmodule.exports = randomatic;\n\n/**\n * Available mask characters\n */\n\nvar type = {\n  lower: 'abcdefghijklmnopqrstuvwxyz',\n  upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  number: '0123456789',\n  special: '~!@#$%^&()_+-={}[];\\',.'\n};\n\ntype.all = type.lower + type.upper + type.number + type.special;\n\n/**\n * Generate random character sequences of a specified `length`,\n * based on the given `pattern`.\n *\n * @param {String} `pattern` The pattern to use for generating the random string.\n * @param {String} `length` The length of the string to generate.\n * @param {String} `options`\n * @return {String}\n * @api public\n */\n\nfunction randomatic(pattern, length, options) {\n  if (typeof pattern === 'undefined') {\n    throw new Error('randomatic expects a string or number.');\n  }\n\n  var custom = false;\n  if (arguments.length === 1) {\n    if (typeof pattern === 'string') {\n      length = pattern.length;\n\n    } else if (isNumber(pattern)) {\n      options = {}; length = pattern; pattern = '*';\n    }\n  }\n\n  if (typeOf(length) === 'object' && length.hasOwnProperty('chars')) {\n    options = length;\n    pattern = options.chars;\n    length = pattern.length;\n    custom = true;\n  }\n\n  var opts = options || {};\n  var mask = '';\n  var res = '';\n\n  // Characters to be used\n  if (pattern.indexOf('?') !== -1) mask += opts.chars;\n  if (pattern.indexOf('a') !== -1) mask += type.lower;\n  if (pattern.indexOf('A') !== -1) mask += type.upper;\n  if (pattern.indexOf('0') !== -1) mask += type.number;\n  if (pattern.indexOf('!') !== -1) mask += type.special;\n  if (pattern.indexOf('*') !== -1) mask += type.all;\n  if (custom) mask += pattern;\n\n  while (length--) {\n    res += mask.charAt(parseInt(Math.random() * mask.length, 10));\n  }\n  return res;\n};\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","/*!\n * repeat-element <https://github.com/jonschlinkert/repeat-element>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function repeat(ele, num) {\n  var arr = new Array(num);\n\n  for (var i = 0; i < num; i++) {\n    arr[i] = ele;\n  }\n\n  return arr;\n};\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar isNumber = require('is-number');\nvar randomize = require('randomatic');\nvar repeatStr = require('repeat-string');\nvar repeat = require('repeat-element');\n\n/**\n * Expose `fillRange`\n */\n\nmodule.exports = fillRange;\n\n/**\n * Return a range of numbers or letters.\n *\n * @param  {String} `a` Start of the range\n * @param  {String} `b` End of the range\n * @param  {String} `step` Increment or decrement to use.\n * @param  {Function} `fn` Custom function to modify each element in the range.\n * @return {Array}\n */\n\nfunction fillRange(a, b, step, options, fn) {\n  if (a == null || b == null) {\n    throw new Error('fill-range expects the first and second args to be strings.');\n  }\n\n  if (typeof step === 'function') {\n    fn = step; options = {}; step = null;\n  }\n\n  if (typeof options === 'function') {\n    fn = options; options = {};\n  }\n\n  if (isObject(step)) {\n    options = step; step = '';\n  }\n\n  var expand, regex = false, sep = '';\n  var opts = options || {};\n\n  if (typeof opts.silent === 'undefined') {\n    opts.silent = true;\n  }\n\n  step = step || opts.step;\n\n  // store a ref to unmodified arg\n  var origA = a, origB = b;\n\n  b = (b.toString() === '-0') ? 0 : b;\n\n  if (opts.optimize || opts.makeRe) {\n    step = step ? (step += '~') : step;\n    expand = true;\n    regex = true;\n    sep = '~';\n  }\n\n  // handle special step characters\n  if (typeof step === 'string') {\n    var match = stepRe().exec(step);\n\n    if (match) {\n      var i = match.index;\n      var m = match[0];\n\n      // repeat string\n      if (m === '+') {\n        return repeat(a, b);\n\n      // randomize a, `b` times\n      } else if (m === '?') {\n        return [randomize(a, b)];\n\n      // expand right, no regex reduction\n      } else if (m === '>') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n\n      // expand to an array, or if valid create a reduced\n      // string for a regex logic `or`\n      } else if (m === '|') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n        regex = true;\n        sep = m;\n\n      // expand to an array, or if valid create a reduced\n      // string for a regex range\n      } else if (m === '~') {\n        step = step.substr(0, i) + step.substr(i + 1);\n        expand = true;\n        regex = true;\n        sep = m;\n      }\n    } else if (!isNumber(step)) {\n      if (!opts.silent) {\n        throw new TypeError('fill-range: invalid step.');\n      }\n      return null;\n    }\n  }\n\n  if (/[.&*()[\\]^%$#@!]/.test(a) || /[.&*()[\\]^%$#@!]/.test(b)) {\n    if (!opts.silent) {\n      throw new RangeError('fill-range: invalid range arguments.');\n    }\n    return null;\n  }\n\n  // has neither a letter nor number, or has both letters and numbers\n  // this needs to be after the step logic\n  if (!noAlphaNum(a) || !noAlphaNum(b) || hasBoth(a) || hasBoth(b)) {\n    if (!opts.silent) {\n      throw new RangeError('fill-range: invalid range arguments.');\n    }\n    return null;\n  }\n\n  // validate arguments\n  var isNumA = isNumber(zeros(a));\n  var isNumB = isNumber(zeros(b));\n\n  if ((!isNumA && isNumB) || (isNumA && !isNumB)) {\n    if (!opts.silent) {\n      throw new TypeError('fill-range: first range argument is incompatible with second.');\n    }\n    return null;\n  }\n\n  // by this point both are the same, so we\n  // can use A to check going forward.\n  var isNum = isNumA;\n  var num = formatStep(step);\n\n  // is the range alphabetical? or numeric?\n  if (isNum) {\n    // if numeric, coerce to an integer\n    a = +a; b = +b;\n  } else {\n    // otherwise, get the charCode to expand alpha ranges\n    a = a.charCodeAt(0);\n    b = b.charCodeAt(0);\n  }\n\n  // is the pattern descending?\n  var isDescending = a > b;\n\n  // don't create a character class if the args are < 0\n  if (a < 0 || b < 0) {\n    expand = false;\n    regex = false;\n  }\n\n  // detect padding\n  var padding = isPadded(origA, origB);\n  var res, pad, arr = [];\n  var ii = 0;\n\n  // character classes, ranges and logical `or`\n  if (regex) {\n    if (shouldExpand(a, b, num, isNum, padding, opts)) {\n      // make sure the correct separator is used\n      if (sep === '|' || sep === '~') {\n        sep = detectSeparator(a, b, num, isNum, isDescending);\n      }\n      return wrap([origA, origB], sep, opts);\n    }\n  }\n\n  while (isDescending ? (a >= b) : (a <= b)) {\n    if (padding && isNum) {\n      pad = padding(a);\n    }\n\n    // custom function\n    if (typeof fn === 'function') {\n      res = fn(a, isNum, pad, ii++);\n\n    // letters\n    } else if (!isNum) {\n      if (regex && isInvalidChar(a)) {\n        res = null;\n      } else {\n        res = String.fromCharCode(a);\n      }\n\n    // numbers\n    } else {\n      res = formatPadding(a, pad);\n    }\n\n    // add result to the array, filtering any nulled values\n    if (res !== null) arr.push(res);\n\n    // increment or decrement\n    if (isDescending) {\n      a -= num;\n    } else {\n      a += num;\n    }\n  }\n\n  // now that the array is expanded, we need to handle regex\n  // character classes, ranges or logical `or` that wasn't\n  // already handled before the loop\n  if ((regex || expand) && !opts.noexpand) {\n    // make sure the correct separator is used\n    if (sep === '|' || sep === '~') {\n      sep = detectSeparator(a, b, num, isNum, isDescending);\n    }\n    if (arr.length === 1 || a < 0 || b < 0) { return arr; }\n    return wrap(arr, sep, opts);\n  }\n\n  return arr;\n}\n\n/**\n * Wrap the string with the correct regex\n * syntax.\n */\n\nfunction wrap(arr, sep, opts) {\n  if (sep === '~') { sep = '-'; }\n  var str = arr.join(sep);\n  var pre = opts && opts.regexPrefix;\n\n  // regex logical `or`\n  if (sep === '|') {\n    str = pre ? pre + str : str;\n    str = '(' + str + ')';\n  }\n\n  // regex character class\n  if (sep === '-') {\n    str = (pre && pre === '^')\n      ? pre + str\n      : str;\n    str = '[' + str + ']';\n  }\n  return [str];\n}\n\n/**\n * Check for invalid characters\n */\n\nfunction isCharClass(a, b, step, isNum, isDescending) {\n  if (isDescending) { return false; }\n  if (isNum) { return a <= 9 && b <= 9; }\n  if (a < b) { return step === 1; }\n  return false;\n}\n\n/**\n * Detect the correct separator to use\n */\n\nfunction shouldExpand(a, b, num, isNum, padding, opts) {\n  if (isNum && (a > 9 || b > 9)) { return false; }\n  return !padding && num === 1 && a < b;\n}\n\n/**\n * Detect the correct separator to use\n */\n\nfunction detectSeparator(a, b, step, isNum, isDescending) {\n  var isChar = isCharClass(a, b, step, isNum, isDescending);\n  if (!isChar) {\n    return '|';\n  }\n  return '~';\n}\n\n/**\n * Correctly format the step based on type\n */\n\nfunction formatStep(step) {\n  return Math.abs(step >> 0) || 1;\n}\n\n/**\n * Format padding, taking leading `-` into account\n */\n\nfunction formatPadding(ch, pad) {\n  var res = pad ? pad + ch : ch;\n  if (pad && ch.toString().charAt(0) === '-') {\n    res = '-' + pad + ch.toString().substr(1);\n  }\n  return res.toString();\n}\n\n/**\n * Check for invalid characters\n */\n\nfunction isInvalidChar(str) {\n  var ch = toStr(str);\n  return ch === '\\\\'\n    || ch === '['\n    || ch === ']'\n    || ch === '^'\n    || ch === '('\n    || ch === ')'\n    || ch === '`';\n}\n\n/**\n * Convert to a string from a charCode\n */\n\nfunction toStr(ch) {\n  return String.fromCharCode(ch);\n}\n\n\n/**\n * Step regex\n */\n\nfunction stepRe() {\n  return /\\?|>|\\||\\+|\\~/g;\n}\n\n/**\n * Return true if `val` has either a letter\n * or a number\n */\n\nfunction noAlphaNum(val) {\n  return /[a-z0-9]/i.test(val);\n}\n\n/**\n * Return true if `val` has both a letter and\n * a number (invalid)\n */\n\nfunction hasBoth(val) {\n  return /[a-z][0-9]|[0-9][a-z]/i.test(val);\n}\n\n/**\n * Normalize zeros for checks\n */\n\nfunction zeros(val) {\n  if (/^-*0+$/.test(val.toString())) {\n    return '0';\n  }\n  return val;\n}\n\n/**\n * Return true if `val` has leading zeros,\n * or a similar valid pattern.\n */\n\nfunction hasZeros(val) {\n  return /[^.]\\.|^-*0+[0-9]/.test(val);\n}\n\n/**\n * If the string is padded, returns a curried function with\n * the a cached padding string, or `false` if no padding.\n *\n * @param  {*} `origA` String or number.\n * @return {String|Boolean}\n */\n\nfunction isPadded(origA, origB) {\n  if (hasZeros(origA) || hasZeros(origB)) {\n    var alen = length(origA);\n    var blen = length(origB);\n\n    var len = alen >= blen\n      ? alen\n      : blen;\n\n    return function (a) {\n      return repeatStr('0', len - length(a));\n    };\n  }\n  return false;\n}\n\n/**\n * Get the string length of `val`\n */\n\nfunction length(val) {\n  return val.toString().length;\n}\n","/*!\n * expand-range <https://github.com/jonschlinkert/expand-range>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar fill = require('fill-range');\n\nmodule.exports = function expandRange(str, options, fn) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expand-range expects a string.');\n  }\n\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  if (typeof options === 'boolean') {\n    options = {};\n    options.makeRe = true;\n  }\n\n  // create arguments to pass to fill-range\n  var opts = options || {};\n  var args = str.split('..');\n  var len = args.length;\n  if (len > 3) { return str; }\n\n  // if only one argument, it can't expand so return it\n  if (len === 1) { return args; }\n\n  // if `true`, tell fill-range to regexify the string\n  if (typeof fn === 'boolean' && fn === true) {\n    opts.makeRe = true;\n  }\n\n  args.push(opts);\n  return fill.apply(null, args.concat(fn));\n};\n","/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * Replace tokens in `str` with a temporary, heuristic placeholder.\n *\n * ```js\n * tokens.before('{a\\\\,b}');\n * //=> '{__ID1__}'\n * ```\n *\n * @param  {String} `str`\n * @return {String} String with placeholders.\n * @api public\n */\n\nexports.before = function before(str, re) {\n  return str.replace(re, function (match) {\n    var id = randomize();\n    cache[id] = match;\n    return '__ID' + id + '__';\n  });\n};\n\n/**\n * Replace placeholders in `str` with original tokens.\n *\n * ```js\n * tokens.after('{__ID1__}');\n * //=> '{a\\\\,b}'\n * ```\n *\n * @param  {String} `str` String with placeholders\n * @return {String} `str` String with original tokens.\n * @api public\n */\n\nexports.after = function after(str) {\n  return str.replace(/__ID(.{5})__/g, function (_, id) {\n    return cache[id];\n  });\n};\n\nfunction randomize() {\n  return Math.random().toString().slice(2, 7);\n}\n\nvar cache = {};","/*!\n * braces <https://github.com/jonschlinkert/braces>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * Module dependencies\n */\n\nvar expand = require('expand-range');\nvar repeat = require('repeat-element');\nvar tokens = require('preserve');\n\n/**\n * Expose `braces`\n */\n\nmodule.exports = function(str, options) {\n  if (typeof str !== 'string') {\n    throw new Error('braces expects a string');\n  }\n  return braces(str, options);\n};\n\n/**\n * Expand `{foo,bar}` or `{1..5}` braces in the\n * given `string`.\n *\n * @param  {String} `str`\n * @param  {Array} `arr`\n * @param  {Object} `options`\n * @return {Array}\n */\n\nfunction braces(str, arr, options) {\n  if (str === '') {\n    return [];\n  }\n\n  if (!Array.isArray(arr)) {\n    options = arr;\n    arr = [];\n  }\n\n  var opts = options || {};\n  arr = arr || [];\n\n  if (typeof opts.nodupes === 'undefined') {\n    opts.nodupes = true;\n  }\n\n  var fn = opts.fn;\n  var es6;\n\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = {};\n  }\n\n  if (!(patternRe instanceof RegExp)) {\n    patternRe = patternRegex();\n  }\n\n  var matches = str.match(patternRe) || [];\n  var m = matches[0];\n\n  switch(m) {\n    case '\\\\,':\n      return escapeCommas(str, arr, opts);\n    case '\\\\.':\n      return escapeDots(str, arr, opts);\n    case '\\/.':\n      return escapePaths(str, arr, opts);\n    case ' ':\n      return splitWhitespace(str);\n    case '{,}':\n      return exponential(str, opts, braces);\n    case '{}':\n      return emptyBraces(str, arr, opts);\n    case '\\\\{':\n    case '\\\\}':\n      return escapeBraces(str, arr, opts);\n    case '${':\n      if (!/\\{[^{]+\\{/.test(str)) {\n        return arr.concat(str);\n      } else {\n        es6 = true;\n        str = tokens.before(str, es6Regex());\n      }\n  }\n\n  if (!(braceRe instanceof RegExp)) {\n    braceRe = braceRegex();\n  }\n\n  var match = braceRe.exec(str);\n  if (match == null) {\n    return [str];\n  }\n\n  var outter = match[1];\n  var inner = match[2];\n  if (inner === '') { return [str]; }\n\n  var segs, segsLength;\n\n  if (inner.indexOf('..') !== -1) {\n    segs = expand(inner, opts, fn) || inner.split(',');\n    segsLength = segs.length;\n\n  } else if (inner[0] === '\"' || inner[0] === '\\'') {\n    return arr.concat(str.split(/['\"]/).join(''));\n\n  } else {\n    segs = inner.split(',');\n    if (opts.makeRe) {\n      return braces(str.replace(outter, wrap(segs, '|')), opts);\n    }\n\n    segsLength = segs.length;\n    if (segsLength === 1 && opts.bash) {\n      segs[0] = wrap(segs[0], '\\\\');\n    }\n  }\n\n  var len = segs.length;\n  var i = 0, val;\n\n  while (len--) {\n    var path = segs[i++];\n\n    if (/(\\.[^.\\/])/.test(path)) {\n      if (segsLength > 1) {\n        return segs;\n      } else {\n        return [str];\n      }\n    }\n\n    val = splice(str, outter, path);\n\n    if (/\\{[^{}]+?\\}/.test(val)) {\n      arr = braces(val, arr, opts);\n    } else if (val !== '') {\n      if (opts.nodupes && arr.indexOf(val) !== -1) { continue; }\n      arr.push(es6 ? tokens.after(val) : val);\n    }\n  }\n\n  if (opts.strict) { return filter(arr, filterEmpty); }\n  return arr;\n}\n\n/**\n * Expand exponential ranges\n *\n *   `a{,}{,}` => ['a', 'a', 'a', 'a']\n */\n\nfunction exponential(str, options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = null;\n  }\n\n  var opts = options || {};\n  var esc = '__ESC_EXP__';\n  var exp = 0;\n  var res;\n\n  var parts = str.split('{,}');\n  if (opts.nodupes) {\n    return fn(parts.join(''), opts);\n  }\n\n  exp = parts.length - 1;\n  res = fn(parts.join(esc), opts);\n  var len = res.length;\n  var arr = [];\n  var i = 0;\n\n  while (len--) {\n    var ele = res[i++];\n    var idx = ele.indexOf(esc);\n\n    if (idx === -1) {\n      arr.push(ele);\n\n    } else {\n      ele = ele.split('__ESC_EXP__').join('');\n      if (!!ele && opts.nodupes !== false) {\n        arr.push(ele);\n\n      } else {\n        var num = Math.pow(2, exp);\n        arr.push.apply(arr, repeat(ele, num));\n      }\n    }\n  }\n  return arr;\n}\n\n/**\n * Wrap a value with parens, brackets or braces,\n * based on the given character/separator.\n *\n * @param  {String|Array} `val`\n * @param  {String} `ch`\n * @return {String}\n */\n\nfunction wrap(val, ch) {\n  if (ch === '|') {\n    return '(' + val.join(ch) + ')';\n  }\n  if (ch === ',') {\n    return '{' + val.join(ch) + '}';\n  }\n  if (ch === '-') {\n    return '[' + val.join(ch) + ']';\n  }\n  if (ch === '\\\\') {\n    return '\\\\{' + val + '\\\\}';\n  }\n}\n\n/**\n * Handle empty braces: `{}`\n */\n\nfunction emptyBraces(str, arr, opts) {\n  return braces(str.split('{}').join('\\\\{\\\\}'), arr, opts);\n}\n\n/**\n * Filter out empty-ish values\n */\n\nfunction filterEmpty(ele) {\n  return !!ele && ele !== '\\\\';\n}\n\n/**\n * Handle patterns with whitespace\n */\n\nfunction splitWhitespace(str) {\n  var segs = str.split(' ');\n  var len = segs.length;\n  var res = [];\n  var i = 0;\n\n  while (len--) {\n    res.push.apply(res, braces(segs[i++]));\n  }\n  return res;\n}\n\n/**\n * Handle escaped braces: `\\\\{foo,bar}`\n */\n\nfunction escapeBraces(str, arr, opts) {\n  if (!/\\{[^{]+\\{/.test(str)) {\n    return arr.concat(str.split('\\\\').join(''));\n  } else {\n    str = str.split('\\\\{').join('__LT_BRACE__');\n    str = str.split('\\\\}').join('__RT_BRACE__');\n    return map(braces(str, arr, opts), function(ele) {\n      ele = ele.split('__LT_BRACE__').join('{');\n      return ele.split('__RT_BRACE__').join('}');\n    });\n  }\n}\n\n/**\n * Handle escaped dots: `{1\\\\.2}`\n */\n\nfunction escapeDots(str, arr, opts) {\n  if (!/[^\\\\]\\..+\\\\\\./.test(str)) {\n    return arr.concat(str.split('\\\\').join(''));\n  } else {\n    str = str.split('\\\\.').join('__ESC_DOT__');\n    return map(braces(str, arr, opts), function(ele) {\n      return ele.split('__ESC_DOT__').join('.');\n    });\n  }\n}\n\n/**\n * Handle escaped dots: `{1\\\\.2}`\n */\n\nfunction escapePaths(str, arr, opts) {\n  str = str.split('\\/.').join('__ESC_PATH__');\n  return map(braces(str, arr, opts), function(ele) {\n    return ele.split('__ESC_PATH__').join('\\/.');\n  });\n}\n\n/**\n * Handle escaped commas: `{a\\\\,b}`\n */\n\nfunction escapeCommas(str, arr, opts) {\n  if (!/\\w,/.test(str)) {\n    return arr.concat(str.split('\\\\').join(''));\n  } else {\n    str = str.split('\\\\,').join('__ESC_COMMA__');\n    return map(braces(str, arr, opts), function(ele) {\n      return ele.split('__ESC_COMMA__').join(',');\n    });\n  }\n}\n\n/**\n * Regex for common patterns\n */\n\nfunction patternRegex() {\n  return /\\${|( (?=[{,}])|(?=[{,}]) )|{}|{,}|\\\\,(?=.*[{}])|\\/\\.(?=.*[{}])|\\\\\\.(?={)|\\\\{|\\\\}/;\n}\n\n/**\n * Braces regex.\n */\n\nfunction braceRegex() {\n  return /.*(\\\\?\\{([^}]+)\\})/;\n}\n\n/**\n * es6 delimiter regex.\n */\n\nfunction es6Regex() {\n  return /\\$\\{([^}]+)\\}/;\n}\n\nvar braceRe;\nvar patternRe;\n\n/**\n * Faster alternative to `String.replace()` when the\n * index of the token to be replaces can't be supplied\n */\n\nfunction splice(str, token, replacement) {\n  var i = str.indexOf(token);\n  return str.substr(0, i) + replacement\n    + str.substr(i + token.length);\n}\n\n/**\n * Fast array map\n */\n\nfunction map(arr, fn) {\n  if (arr == null) {\n    return [];\n  }\n\n  var len = arr.length;\n  var res = new Array(len);\n  var i = -1;\n\n  while (++i < len) {\n    res[i] = fn(arr[i], i, arr);\n  }\n\n  return res;\n}\n\n/**\n * Fast array filter\n */\n\nfunction filter(arr, cb) {\n  if (arr == null) return [];\n  if (typeof cb !== 'function') {\n    throw new TypeError('braces: filter expects a callback function.');\n  }\n\n  var len = arr.length;\n  var res = arr.slice();\n  var i = 0;\n\n  while (len--) {\n    if (!cb(arr[len], i++)) {\n      res.splice(len, 1);\n    }\n  }\n  return res;\n}\n","/*!\n * is-posix-bracket <https://github.com/jonschlinkert/is-posix-bracket>\n *\n * Copyright (c) 2015-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isPosixBracket(str) {\n  return typeof str === 'string' && /\\[([:.=+])(?:[^\\[\\]]|)+\\1\\]/.test(str);\n};\n","/*!\n * expand-brackets <https://github.com/jonschlinkert/expand-brackets>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar isPosixBracket = require('is-posix-bracket');\n\n/**\n * POSIX character classes\n */\n\nvar POSIX = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E',\n  punct: '-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word:  'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9',\n};\n\n/**\n * Expose `brackets`\n */\n\nmodule.exports = brackets;\n\nfunction brackets(str) {\n  if (!isPosixBracket(str)) {\n    return str;\n  }\n\n  var negated = false;\n  if (str.indexOf('[^') !== -1) {\n    negated = true;\n    str = str.split('[^').join('[');\n  }\n  if (str.indexOf('[!') !== -1) {\n    negated = true;\n    str = str.split('[!').join('[');\n  }\n\n  var a = str.split('[');\n  var b = str.split(']');\n  var imbalanced = a.length !== b.length;\n\n  var parts = str.split(/(?::\\]\\[:|\\[?\\[:|:\\]\\]?)/);\n  var len = parts.length, i = 0;\n  var end = '', beg = '';\n  var res = [];\n\n  // start at the end (innermost) first\n  while (len--) {\n    var inner = parts[i++];\n    if (inner === '^[!' || inner === '[!') {\n      inner = '';\n      negated = true;\n    }\n\n    var prefix = negated ? '^' : '';\n    var ch = POSIX[inner];\n\n    if (ch) {\n      res.push('[' + prefix + ch + ']');\n    } else if (inner) {\n      if (/^\\[?\\w-\\w\\]?$/.test(inner)) {\n        if (i === parts.length) {\n          res.push('[' + prefix + inner);\n        } else if (i === 1) {\n          res.push(prefix + inner + ']');\n        } else {\n          res.push(prefix + inner);\n        }\n      } else {\n        if (i === 1) {\n          beg += inner;\n        } else if (i === parts.length) {\n          end += inner;\n        } else {\n          res.push('[' + prefix + inner + ']');\n        }\n      }\n    }\n  }\n\n  var result = res.join('|');\n  var rlen = res.length || 1;\n  if (rlen > 1) {\n    result = '(?:' + result + ')';\n    rlen = 1;\n  }\n  if (beg) {\n    rlen++;\n    if (beg.charAt(0) === '[') {\n      if (imbalanced) {\n        beg = '\\\\[' + beg.slice(1);\n      } else {\n        beg += ']';\n      }\n    }\n    result = beg + result;\n  }\n  if (end) {\n    rlen++;\n    if (end.slice(-1) === ']') {\n      if (imbalanced) {\n        end = end.slice(0, end.length - 1) + '\\\\]';\n      } else {\n        end = '[' + end;\n      }\n    }\n    result += end;\n  }\n\n  if (rlen > 1) {\n    result = result.split('][').join(']|[');\n    if (result.indexOf('|') !== -1 && !/\\(\\?/.test(result)) {\n      result = '(?:' + result + ')';\n    }\n  }\n\n  result = result.replace(/\\[+=|=\\]+/g, '\\\\b');\n  return result;\n}\n\nbrackets.makeRe = function(pattern) {\n  try {\n    return new RegExp(brackets(pattern));\n  } catch (err) {}\n};\n\nbrackets.isMatch = function(str, pattern) {\n  try {\n    return brackets.makeRe(pattern).test(str);\n  } catch (err) {\n    return false;\n  }\n};\n\nbrackets.match = function(arr, pattern) {\n  var len = arr.length, i = 0;\n  var res = arr.slice();\n\n  var re = brackets.makeRe(pattern);\n  while (i < len) {\n    var ele = arr[i++];\n    if (!re.test(ele)) {\n      continue;\n    }\n    res.splice(i, 1);\n  }\n  return res;\n};\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  return typeof str === 'string'\n    && /[@?!+*]\\(/.test(str);\n};\n","/*!\n * extglob <https://github.com/jonschlinkert/extglob>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Module dependencies\n */\n\nvar isExtglob = require('is-extglob');\nvar re, cache = {};\n\n/**\n * Expose `extglob`\n */\n\nmodule.exports = extglob;\n\n/**\n * Convert the given extglob `string` to a regex-compatible\n * string.\n *\n * ```js\n * var extglob = require('extglob');\n * extglob('!(a?(b))');\n * //=> '(?!a(?:b)?)[^/]*?'\n * ```\n *\n * @param {String} `str` The string to convert.\n * @param {Object} `options`\n *   @option {Boolean} [options] `esc` If `false` special characters will not be escaped. Defaults to `true`.\n *   @option {Boolean} [options] `regex` If `true` a regular expression is returned instead of a string.\n * @return {String}\n * @api public\n */\n\n\nfunction extglob(str, opts) {\n  opts = opts || {};\n  var o = {}, i = 0;\n\n  // fix common character reversals\n  // '*!(.js)' => '*.!(js)'\n  str = str.replace(/!\\(([^\\w*()])/g, '$1!(');\n\n  // support file extension negation\n  str = str.replace(/([*\\/])\\.!\\([*]\\)/g, function (m, ch) {\n    if (ch === '/') {\n      return escape('\\\\/[^.]+');\n    }\n    return escape('[^.]+');\n  });\n\n  // create a unique key for caching by\n  // combining the string and options\n  var key = str\n    + String(!!opts.regex)\n    + String(!!opts.contains)\n    + String(!!opts.escape);\n\n  if (cache.hasOwnProperty(key)) {\n    return cache[key];\n  }\n\n  if (!(re instanceof RegExp)) {\n    re = regex();\n  }\n\n  opts.negate = false;\n  var m;\n\n  while (m = re.exec(str)) {\n    var prefix = m[1];\n    var inner = m[3];\n    if (prefix === '!') {\n      opts.negate = true;\n    }\n\n    var id = '__EXTGLOB_' + (i++) + '__';\n    // use the prefix of the _last_ (outtermost) pattern\n    o[id] = wrap(inner, prefix, opts.escape);\n    str = str.split(m[0]).join(id);\n  }\n\n  var keys = Object.keys(o);\n  var len = keys.length;\n\n  // we have to loop again to allow us to convert\n  // patterns in reverse order (starting with the\n  // innermost/last pattern first)\n  while (len--) {\n    var prop = keys[len];\n    str = str.split(prop).join(o[prop]);\n  }\n\n  var result = opts.regex\n    ? toRegex(str, opts.contains, opts.negate)\n    : str;\n\n  result = result.split('.').join('\\\\.');\n\n  // cache the result and return it\n  return (cache[key] = result);\n}\n\n/**\n * Convert `string` to a regex string.\n *\n * @param  {String} `str`\n * @param  {String} `prefix` Character that determines how to wrap the string.\n * @param  {Boolean} `esc` If `false` special characters will not be escaped. Defaults to `true`.\n * @return {String}\n */\n\nfunction wrap(inner, prefix, esc) {\n  if (esc) inner = escape(inner);\n\n  switch (prefix) {\n    case '!':\n      return '(?!' + inner + ')[^/]' + (esc ? '%%%~' : '*?');\n    case '@':\n      return '(?:' + inner + ')';\n    case '+':\n      return '(?:' + inner + ')+';\n    case '*':\n      return '(?:' + inner + ')' + (esc ? '%%' : '*')\n    case '?':\n      return '(?:' + inner + '|)';\n    default:\n      return inner;\n  }\n}\n\nfunction escape(str) {\n  str = str.split('*').join('[^/]%%%~');\n  str = str.split('.').join('\\\\.');\n  return str;\n}\n\n/**\n * extglob regex.\n */\n\nfunction regex() {\n  return /(\\\\?[@?!+*$]\\\\?)(\\(([^()]*?)\\))/;\n}\n\n/**\n * Negation regex\n */\n\nfunction negate(str) {\n  return '(?!^' + str + ').*$';\n}\n\n/**\n * Create the regex to do the matching. If\n * the leading character in the `pattern` is `!`\n * a negation regex is returned.\n *\n * @param {String} `pattern`\n * @param {Boolean} `contains` Allow loose matching.\n * @param {Boolean} `isNegated` True if the pattern is a negation pattern.\n */\n\nfunction toRegex(pattern, contains, isNegated) {\n  var prefix = contains ? '^' : '';\n  var after = contains ? '$' : '';\n  pattern = ('(?:' + pattern + ')' + after);\n  if (isNegated) {\n    pattern = prefix + negate(pattern);\n  }\n  return new RegExp(prefix + pattern);\n}\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\n\nmodule.exports = function isGlob(str) {\n  return typeof str === 'string'\n    && (/[*!?{}(|)[\\]]/.test(str)\n     || isExtglob(str));\n};","var isWin = process.platform === 'win32';\n\nmodule.exports = function (str) {\n\twhile (endsInSeparator(str)) {\n\t\tstr = str.slice(0, -1);\n\t}\n\treturn str;\n};\n\nfunction endsInSeparator(str) {\n\tvar last = str[str.length - 1];\n\treturn str.length > 1 && (last === '/' || (isWin && last === '\\\\'));\n}\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar removeTrailingSeparator = require('remove-trailing-separator');\n\nmodule.exports = function normalizePath(str, stripTrailing) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n  str = str.replace(/[\\\\\\/]+/g, '/');\n  if (stripTrailing !== false) {\n    str = removeTrailingSeparator(str);\n  }\n  return str;\n};\n","/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n","/*!\n * for-in <https://github.com/jonschlinkert/for-in>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function forIn(obj, fn, thisArg) {\n  for (var key in obj) {\n    if (fn.call(thisArg, obj[key], key, obj) === false) {\n      break;\n    }\n  }\n};\n","/*!\n * for-own <https://github.com/jonschlinkert/for-own>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar forIn = require('for-in');\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nmodule.exports = function forOwn(obj, fn, thisArg) {\n  forIn(obj, function(val, key) {\n    if (hasOwn.call(obj, key)) {\n      return fn.call(thisArg, obj[key], key, obj);\n    }\n  });\n};\n","/*!\n * object.omit <https://github.com/jonschlinkert/object.omit>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('is-extendable');\nvar forOwn = require('for-own');\n\nmodule.exports = function omit(obj, keys) {\n  if (!isObject(obj)) return {};\n\n  keys = [].concat.apply([], [].slice.call(arguments, 1));\n  var last = keys[keys.length - 1];\n  var res = {}, fn;\n\n  if (typeof last === 'function') {\n    fn = keys.pop();\n  }\n\n  var isFunction = typeof fn === 'function';\n  if (!keys.length && !isFunction) {\n    return obj;\n  }\n\n  forOwn(obj, function(value, key) {\n    if (keys.indexOf(key) === -1) {\n\n      if (!isFunction) {\n        res[key] = value;\n      } else if (fn(value, key, obj)) {\n        res[key] = value;\n      }\n    }\n  });\n  return res;\n};\n","'use strict';\n\nvar path = require('path');\nvar isglob = require('is-glob');\n\nmodule.exports = function globParent(str) {\n\tstr += 'a'; // preserves full path in case of trailing path separator\n\tdo {str = path.dirname(str)} while (isglob(str));\n\treturn str;\n};\n","/*!\n * glob-base <https://github.com/jonschlinkert/glob-base>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar path = require('path');\nvar parent = require('glob-parent');\nvar isGlob = require('is-glob');\n\nmodule.exports = function globBase(pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob-base expects a string.');\n  }\n\n  var res = {};\n  res.base = parent(pattern);\n  res.isGlob = isGlob(pattern);\n\n  if (res.base !== '.') {\n    res.glob = pattern.substr(res.base.length);\n    if (res.glob.charAt(0) === '/') {\n      res.glob = res.glob.substr(1);\n    }\n  } else {\n    res.glob = pattern;\n  }\n\n  if (!res.isGlob) {\n    res.base = dirname(pattern);\n    res.glob = res.base !== '.'\n      ? pattern.substr(res.base.length)\n      : pattern;\n  }\n\n  if (res.glob.substr(0, 2) === './') {\n    res.glob = res.glob.substr(2);\n  }\n  if (res.glob.charAt(0) === '/') {\n    res.glob = res.glob.substr(1);\n  }\n  return res;\n};\n\nfunction dirname(glob) {\n  if (glob.slice(-1) === '/') return glob;\n  return path.dirname(glob);\n}\n","/*!\n * is-dotfile <https://github.com/jonschlinkert/is-dotfile>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(str) {\n  if (str.charCodeAt(0) === 46 /* . */ && str.indexOf('/', 1) === -1) {\n    return true;\n  }\n  var slash = str.lastIndexOf('/');\n  return slash !== -1 ? str.charCodeAt(slash + 1) === 46  /* . */ : false;\n};\n","/*!\n * parse-glob <https://github.com/jonschlinkert/parse-glob>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isGlob = require('is-glob');\nvar findBase = require('glob-base');\nvar extglob = require('is-extglob');\nvar dotfile = require('is-dotfile');\n\n/**\n * Expose `cache`\n */\n\nvar cache = module.exports.cache = {};\n\n/**\n * Parse a glob pattern into tokens.\n *\n * When no paths or '**' are in the glob, we use a\n * different strategy for parsing the filename, since\n * file names can contain braces and other difficult\n * patterns. such as:\n *\n *  - `*.{a,b}`\n *  - `(**|*.js)`\n */\n\nmodule.exports = function parseGlob(glob) {\n  if (cache.hasOwnProperty(glob)) {\n    return cache[glob];\n  }\n\n  var tok = {};\n  tok.orig = glob;\n  tok.is = {};\n\n  // unescape dots and slashes in braces/brackets\n  glob = escape(glob);\n\n  var parsed = findBase(glob);\n  tok.is.glob = parsed.isGlob;\n\n  tok.glob = parsed.glob;\n  tok.base = parsed.base;\n  var segs = /([^\\/]*)$/.exec(glob);\n\n  tok.path = {};\n  tok.path.dirname = '';\n  tok.path.basename = segs[1] || '';\n  tok.path.dirname = glob.split(tok.path.basename).join('') || '';\n  var basename = (tok.path.basename || '').split('.') || '';\n  tok.path.filename = basename[0] || '';\n  tok.path.extname = basename.slice(1).join('.') || '';\n  tok.path.ext = '';\n\n  if (isGlob(tok.path.dirname) && !tok.path.basename) {\n    if (!/\\/$/.test(tok.glob)) {\n      tok.path.basename = tok.glob;\n    }\n    tok.path.dirname = tok.base;\n  }\n\n  if (glob.indexOf('/') === -1 && !tok.is.globstar) {\n    tok.path.dirname = '';\n    tok.path.basename = tok.orig;\n  }\n\n  var dot = tok.path.basename.indexOf('.');\n  if (dot !== -1) {\n    tok.path.filename = tok.path.basename.slice(0, dot);\n    tok.path.extname = tok.path.basename.slice(dot);\n  }\n\n  if (tok.path.extname.charAt(0) === '.') {\n    var exts = tok.path.extname.split('.');\n    tok.path.ext = exts[exts.length - 1];\n  }\n\n  // unescape dots and slashes in braces/brackets\n  tok.glob = unescape(tok.glob);\n  tok.path.dirname = unescape(tok.path.dirname);\n  tok.path.basename = unescape(tok.path.basename);\n  tok.path.filename = unescape(tok.path.filename);\n  tok.path.extname = unescape(tok.path.extname);\n\n  // Booleans\n  var is = (glob && tok.is.glob);\n  tok.is.negated  = glob && glob.charAt(0) === '!';\n  tok.is.extglob  = glob && extglob(glob);\n  tok.is.braces   = has(is, glob, '{');\n  tok.is.brackets = has(is, glob, '[:');\n  tok.is.globstar = has(is, glob, '**');\n  tok.is.dotfile  = dotfile(tok.path.basename) || dotfile(tok.path.filename);\n  tok.is.dotdir   = dotdir(tok.path.dirname);\n  return (cache[glob] = tok);\n}\n\n/**\n * Returns true if the glob matches dot-directories.\n *\n * @param  {Object} `tok` The tokens object\n * @param  {Object} `path` The path object\n * @return {Object}\n */\n\nfunction dotdir(base) {\n  if (base.indexOf('/.') !== -1) {\n    return true;\n  }\n  if (base.charAt(0) === '.' && base.charAt(1) !== '/') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the pattern has the given `ch`aracter(s)\n *\n * @param  {Object} `glob` The glob pattern.\n * @param  {Object} `ch` The character to test for\n * @return {Object}\n */\n\nfunction has(is, glob, ch) {\n  return is && glob.indexOf(ch) !== -1;\n}\n\n/**\n * Escape/unescape utils\n */\n\nfunction escape(str) {\n  var re = /\\{([^{}]*?)}|\\(([^()]*?)\\)|\\[([^\\[\\]]*?)\\]/g;\n  return str.replace(re, function (outter, braces, parens, brackets) {\n    var inner = braces || parens || brackets;\n    if (!inner) { return outter; }\n    return outter.split(inner).join(esc(inner));\n  });\n}\n\nfunction esc(str) {\n  str = str.split('/').join('__SLASH__');\n  str = str.split('.').join('__DOT__');\n  return str;\n}\n\nfunction unescape(str) {\n  str = str.split('__SLASH__').join('/');\n  str = str.split('__DOT__').join('.');\n  return str;\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","/*!\n * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\n\nmodule.exports = function isEqual(a, b) {\n  if (!a && !b) { return true; }\n  if (!a && b || a && !b) { return false; }\n\n  var numKeysA = 0, numKeysB = 0, key;\n  for (key in b) {\n    numKeysB++;\n    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n      return false;\n    }\n  }\n  for (key in a) {\n    numKeysA++;\n  }\n  return numKeysA === numKeysB;\n};\n","/*!\n * regex-cache <https://github.com/jonschlinkert/regex-cache>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar equal = require('is-equal-shallow');\nvar basic = {};\nvar cache = {};\n\n/**\n * Expose `regexCache`\n */\n\nmodule.exports = regexCache;\n\n/**\n * Memoize the results of a call to the new RegExp constructor.\n *\n * @param  {Function} fn [description]\n * @param  {String} str [description]\n * @param  {Options} options [description]\n * @param  {Boolean} nocompare [description]\n * @return {RegExp}\n */\n\nfunction regexCache(fn, str, opts) {\n  var key = '_default_', regex, cached;\n\n  if (!str && !opts) {\n    if (typeof fn !== 'function') {\n      return fn;\n    }\n    return basic[key] || (basic[key] = fn(str));\n  }\n\n  var isString = typeof str === 'string';\n  if (isString) {\n    if (!opts) {\n      return basic[str] || (basic[str] = fn(str));\n    }\n    key = str;\n  } else {\n    opts = str;\n  }\n\n  cached = cache[key];\n  if (cached && equal(cached.opts, opts)) {\n    return cached.regex;\n  }\n\n  memo(key, opts, (regex = fn(str, opts)));\n  return regex;\n}\n\nfunction memo(key, opts, regex) {\n  cache[key] = {regex: regex, opts: opts};\n}\n\n/**\n * Expose `cache`\n */\n\nmodule.exports.cache = cache;\nmodule.exports.basic = basic;\n","'use strict';\n\nvar win32 = process && process.platform === 'win32';\nvar path = require('path');\nvar fileRe = require('filename-regex');\nvar utils = module.exports;\n\n/**\n * Module dependencies\n */\n\nutils.diff = require('arr-diff');\nutils.unique = require('array-unique');\nutils.braces = require('braces');\nutils.brackets = require('expand-brackets');\nutils.extglob = require('extglob');\nutils.isExtglob = require('is-extglob');\nutils.isGlob = require('is-glob');\nutils.typeOf = require('kind-of');\nutils.normalize = require('normalize-path');\nutils.omit = require('object.omit');\nutils.parseGlob = require('parse-glob');\nutils.cache = require('regex-cache');\n\n/**\n * Get the filename of a filepath\n *\n * @param {String} `string`\n * @return {String}\n */\n\nutils.filename = function filename(fp) {\n  var seg = fp.match(fileRe());\n  return seg && seg[0];\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern is the same as a given `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.isPath = function isPath(pattern, opts) {\n  opts = opts || {};\n  return function(fp) {\n    var unixified = utils.unixify(fp, opts);\n    if(opts.nocase){\n      return pattern.toLowerCase() === unixified.toLowerCase();\n    }\n    return pattern === unixified;\n  };\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern contains a `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.hasPath = function hasPath(pattern, opts) {\n  return function(fp) {\n    return utils.unixify(pattern, opts).indexOf(fp) !== -1;\n  };\n};\n\n/**\n * Returns a function that returns true if the given\n * pattern matches or contains a `filepath`\n *\n * @param {String} `pattern`\n * @return {Function}\n */\n\nutils.matchPath = function matchPath(pattern, opts) {\n  var fn = (opts && opts.contains)\n    ? utils.hasPath(pattern, opts)\n    : utils.isPath(pattern, opts);\n  return fn;\n};\n\n/**\n * Returns a function that returns true if the given\n * regex matches the `filename` of a file path.\n *\n * @param {RegExp} `re`\n * @return {Boolean}\n */\n\nutils.hasFilename = function hasFilename(re) {\n  return function(fp) {\n    var name = utils.filename(fp);\n    return name && re.test(name);\n  };\n};\n\n/**\n * Coerce `val` to an array\n *\n * @param  {*} val\n * @return {Array}\n */\n\nutils.arrayify = function arrayify(val) {\n  return !Array.isArray(val)\n    ? [val]\n    : val;\n};\n\n/**\n * Normalize all slashes in a file path or glob pattern to\n * forward slashes.\n */\n\nutils.unixify = function unixify(fp, opts) {\n  if (opts && opts.unixify === false) return fp;\n  if (opts && opts.unixify === true || win32 || path.sep === '\\\\') {\n    return utils.normalize(fp, false);\n  }\n  if (opts && opts.unescape === true) {\n    return fp ? fp.toString().replace(/\\\\(\\w)/g, '$1') : '';\n  }\n  return fp;\n};\n\n/**\n * Escape/unescape utils\n */\n\nutils.escapePath = function escapePath(fp) {\n  return fp.replace(/[\\\\.]/g, '\\\\$&');\n};\n\nutils.unescapeGlob = function unescapeGlob(fp) {\n  return fp.replace(/[\\\\\"']/g, '');\n};\n\nutils.escapeRe = function escapeRe(str) {\n  return str.replace(/[-[\\\\$*+?.#^\\s{}(|)\\]]/g, '\\\\$&');\n};\n\n/**\n * Expose `utils`\n */\n\nmodule.exports = utils;\n","'use strict';\n\nvar chars = {}, unesc, temp;\n\nfunction reverse(object, prepender) {\n  return Object.keys(object).reduce(function(reversed, key) {\n    var newKey = prepender ? prepender + key : key; // Optionally prepend a string to key.\n    reversed[object[key]] = newKey; // Swap key and value.\n    return reversed; // Return the result.\n  }, {});\n}\n\n/**\n * Regex for common characters\n */\n\nchars.escapeRegex = {\n  '?': /\\?/g,\n  '@': /\\@/g,\n  '!': /\\!/g,\n  '+': /\\+/g,\n  '*': /\\*/g,\n  '(': /\\(/g,\n  ')': /\\)/g,\n  '[': /\\[/g,\n  ']': /\\]/g\n};\n\n/**\n * Escape characters\n */\n\nchars.ESC = {\n  '?': '__UNESC_QMRK__',\n  '@': '__UNESC_AMPE__',\n  '!': '__UNESC_EXCL__',\n  '+': '__UNESC_PLUS__',\n  '*': '__UNESC_STAR__',\n  ',': '__UNESC_COMMA__',\n  '(': '__UNESC_LTPAREN__',\n  ')': '__UNESC_RTPAREN__',\n  '[': '__UNESC_LTBRACK__',\n  ']': '__UNESC_RTBRACK__'\n};\n\n/**\n * Unescape characters\n */\n\nchars.UNESC = unesc || (unesc = reverse(chars.ESC, '\\\\'));\n\nchars.ESC_TEMP = {\n  '?': '__TEMP_QMRK__',\n  '@': '__TEMP_AMPE__',\n  '!': '__TEMP_EXCL__',\n  '*': '__TEMP_STAR__',\n  '+': '__TEMP_PLUS__',\n  ',': '__TEMP_COMMA__',\n  '(': '__TEMP_LTPAREN__',\n  ')': '__TEMP_RTPAREN__',\n  '[': '__TEMP_LTBRACK__',\n  ']': '__TEMP_RTBRACK__'\n};\n\nchars.TEMP = temp || (temp = reverse(chars.ESC_TEMP));\n\nmodule.exports = chars;\n","'use strict';\n\nvar chars = require('./chars');\nvar utils = require('./utils');\n\n/**\n * Expose `Glob`\n */\n\nvar Glob = module.exports = function Glob(pattern, options) {\n  if (!(this instanceof Glob)) {\n    return new Glob(pattern, options);\n  }\n  this.options = options || {};\n  this.pattern = pattern;\n  this.history = [];\n  this.tokens = {};\n  this.init(pattern);\n};\n\n/**\n * Initialize defaults\n */\n\nGlob.prototype.init = function(pattern) {\n  this.orig = pattern;\n  this.negated = this.isNegated();\n  this.options.track = this.options.track || false;\n  this.options.makeRe = true;\n};\n\n/**\n * Push a change into `glob.history`. Useful\n * for debugging.\n */\n\nGlob.prototype.track = function(msg) {\n  if (this.options.track) {\n    this.history.push({msg: msg, pattern: this.pattern});\n  }\n};\n\n/**\n * Return true if `glob.pattern` was negated\n * with `!`, also remove the `!` from the pattern.\n *\n * @return {Boolean}\n */\n\nGlob.prototype.isNegated = function() {\n  if (this.pattern.charCodeAt(0) === 33 /* '!' */) {\n    this.pattern = this.pattern.slice(1);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Expand braces in the given glob pattern.\n *\n * We only need to use the [braces] lib when\n * patterns are nested.\n */\n\nGlob.prototype.braces = function() {\n  if (this.options.nobraces !== true && this.options.nobrace !== true) {\n    // naive/fast check for imbalanced characters\n    var a = this.pattern.match(/[\\{\\(\\[]/g);\n    var b = this.pattern.match(/[\\}\\)\\]]/g);\n\n    // if imbalanced, don't optimize the pattern\n    if (a && b && (a.length !== b.length)) {\n      this.options.makeRe = false;\n    }\n\n    // expand brace patterns and join the resulting array\n    var expanded = utils.braces(this.pattern, this.options);\n    this.pattern = expanded.join('|');\n  }\n};\n\n/**\n * Expand bracket expressions in `glob.pattern`\n */\n\nGlob.prototype.brackets = function() {\n  if (this.options.nobrackets !== true) {\n    this.pattern = utils.brackets(this.pattern);\n  }\n};\n\n/**\n * Expand bracket expressions in `glob.pattern`\n */\n\nGlob.prototype.extglob = function() {\n  if (this.options.noextglob === true) return;\n\n  if (utils.isExtglob(this.pattern)) {\n    this.pattern = utils.extglob(this.pattern, {escape: true});\n  }\n};\n\n/**\n * Parse the given pattern\n */\n\nGlob.prototype.parse = function(pattern) {\n  this.tokens = utils.parseGlob(pattern || this.pattern, true);\n  return this.tokens;\n};\n\n/**\n * Replace `a` with `b`. Also tracks the change before and\n * after each replacement. This is disabled by default, but\n * can be enabled by setting `options.track` to true.\n *\n * Also, when the pattern is a string, `.split()` is used,\n * because it's much faster than replace.\n *\n * @param  {RegExp|String} `a`\n * @param  {String} `b`\n * @param  {Boolean} `escape` When `true`, escapes `*` and `?` in the replacement.\n * @return {String}\n */\n\nGlob.prototype._replace = function(a, b, escape) {\n  this.track('before (find): \"' + a + '\" (replace with): \"' + b + '\"');\n  if (escape) b = esc(b);\n  if (a && b && typeof a === 'string') {\n    this.pattern = this.pattern.split(a).join(b);\n  } else {\n    this.pattern = this.pattern.replace(a, b);\n  }\n  this.track('after');\n};\n\n/**\n * Escape special characters in the given string.\n *\n * @param  {String} `str` Glob pattern\n * @return {String}\n */\n\nGlob.prototype.escape = function(str) {\n  this.track('before escape: ');\n  var re = /[\"\\\\](['\"]?[^\"'\\\\]['\"]?)/g;\n\n  this.pattern = str.replace(re, function($0, $1) {\n    var o = chars.ESC;\n    var ch = o && o[$1];\n    if (ch) {\n      return ch;\n    }\n    if (/[a-z]/i.test($0)) {\n      return $0.split('\\\\').join('');\n    }\n    return $0;\n  });\n\n  this.track('after escape: ');\n};\n\n/**\n * Unescape special characters in the given string.\n *\n * @param  {String} `str`\n * @return {String}\n */\n\nGlob.prototype.unescape = function(str) {\n  var re = /__([A-Z]+)_([A-Z]+)__/g;\n  this.pattern = str.replace(re, function($0, $1) {\n    return chars[$1][$0];\n  });\n  this.pattern = unesc(this.pattern);\n};\n\n/**\n * Escape/unescape utils\n */\n\nfunction esc(str) {\n  str = str.split('?').join('%~');\n  str = str.split('*').join('%%');\n  return str;\n}\n\nfunction unesc(str) {\n  str = str.split('%~').join('?');\n  str = str.split('%%').join('*');\n  return str;\n}\n","/*!\n * micromatch <https://github.com/jonschlinkert/micromatch>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar utils = require('./utils');\nvar Glob = require('./glob');\n\n/**\n * Expose `expand`\n */\n\nmodule.exports = expand;\n\n/**\n * Expand a glob pattern to resolve braces and\n * similar patterns before converting to regex.\n *\n * @param  {String|Array} `pattern`\n * @param  {Array} `files`\n * @param  {Options} `opts`\n * @return {Array}\n */\n\nfunction expand(pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('micromatch.expand(): argument should be a string.');\n  }\n\n  var glob = new Glob(pattern, options || {});\n  var opts = glob.options;\n\n  if (!utils.isGlob(pattern)) {\n    glob.pattern = glob.pattern.replace(/([\\/.])/g, '\\\\$1');\n    return glob;\n  }\n\n  glob.pattern = glob.pattern.replace(/(\\+)(?!\\()/g, '\\\\$1');\n  glob.pattern = glob.pattern.split('$').join('\\\\$');\n\n  if (typeof opts.braces !== 'boolean' && typeof opts.nobraces !== 'boolean') {\n    opts.braces = true;\n  }\n\n  if (glob.pattern === '.*') {\n    return {\n      pattern: '\\\\.' + star,\n      tokens: tok,\n      options: opts\n    };\n  }\n\n  if (glob.pattern === '*') {\n    return {\n      pattern: oneStar(opts.dot),\n      tokens: tok,\n      options: opts\n    };\n  }\n\n  // parse the glob pattern into tokens\n  glob.parse();\n  var tok = glob.tokens;\n  tok.is.negated = opts.negated;\n\n  // dotfile handling\n  if ((opts.dotfiles === true || tok.is.dotfile) && opts.dot !== false) {\n    opts.dotfiles = true;\n    opts.dot = true;\n  }\n\n  if ((opts.dotdirs === true || tok.is.dotdir) && opts.dot !== false) {\n    opts.dotdirs = true;\n    opts.dot = true;\n  }\n\n  // check for braces with a dotfile pattern\n  if (/[{,]\\./.test(glob.pattern)) {\n    opts.makeRe = false;\n    opts.dot = true;\n  }\n\n  if (opts.nonegate !== true) {\n    opts.negated = glob.negated;\n  }\n\n  // if the leading character is a dot or a slash, escape it\n  if (glob.pattern.charAt(0) === '.' && glob.pattern.charAt(1) !== '/') {\n    glob.pattern = '\\\\' + glob.pattern;\n  }\n\n  /**\n   * Extended globs\n   */\n\n  // expand braces, e.g `{1..5}`\n  glob.track('before braces');\n  if (tok.is.braces) {\n    glob.braces();\n  }\n  glob.track('after braces');\n\n  // expand extglobs, e.g `foo/!(a|b)`\n  glob.track('before extglob');\n  if (tok.is.extglob) {\n    glob.extglob();\n  }\n  glob.track('after extglob');\n\n  // expand brackets, e.g `[[:alpha:]]`\n  glob.track('before brackets');\n  if (tok.is.brackets) {\n    glob.brackets();\n  }\n  glob.track('after brackets');\n\n  // special patterns\n  glob._replace('[!', '[^');\n  glob._replace('(?', '(%~');\n  glob._replace(/\\[\\]/, '\\\\[\\\\]');\n  glob._replace('/[', '/' + (opts.dot ? dotfiles : nodot) + '[', true);\n  glob._replace('/?', '/' + (opts.dot ? dotfiles : nodot) + '[^/]', true);\n  glob._replace('/.', '/(?=.)\\\\.', true);\n\n  // windows drives\n  glob._replace(/^(\\w):([\\\\\\/]+?)/gi, '(?=.)$1:$2', true);\n\n  // negate slashes in exclusion ranges\n  if (glob.pattern.indexOf('[^') !== -1) {\n    glob.pattern = negateSlash(glob.pattern);\n  }\n\n  if (opts.globstar !== false && glob.pattern === '**') {\n    glob.pattern = globstar(opts.dot);\n\n  } else {\n    glob.pattern = balance(glob.pattern, '[', ']');\n    glob.escape(glob.pattern);\n\n    // if the pattern has `**`\n    if (tok.is.globstar) {\n      glob.pattern = collapse(glob.pattern, '/**');\n      glob.pattern = collapse(glob.pattern, '**/');\n      glob._replace('/**/', '(?:/' + globstar(opts.dot) + '/|/)', true);\n      glob._replace(/\\*{2,}/g, '**');\n\n      // 'foo/*'\n      glob._replace(/(\\w+)\\*(?!\\/)/g, '$1[^/]*?', true);\n      glob._replace(/\\*\\*\\/\\*(\\w)/g, globstar(opts.dot) + '\\\\/' + (opts.dot ? dotfiles : nodot) + '[^/]*?$1', true);\n\n      if (opts.dot !== true) {\n        glob._replace(/\\*\\*\\/(.)/g, '(?:**\\\\/|)$1');\n      }\n\n      // 'foo/**' or '{**,*}', but not 'foo**'\n      if (tok.path.dirname !== '' || /,\\*\\*|\\*\\*,/.test(glob.orig)) {\n        glob._replace('**', globstar(opts.dot), true);\n      }\n    }\n\n    // ends with /*\n    glob._replace(/\\/\\*$/, '\\\\/' + oneStar(opts.dot), true);\n    // ends with *, no slashes\n    glob._replace(/(?!\\/)\\*$/, star, true);\n    // has 'n*.' (partial wildcard w/ file extension)\n    glob._replace(/([^\\/]+)\\*/, '$1' + oneStar(true), true);\n    // has '*'\n    glob._replace('*', oneStar(opts.dot), true);\n    glob._replace('?.', '?\\\\.', true);\n    glob._replace('?:', '?:', true);\n\n    glob._replace(/\\?+/g, function(match) {\n      var len = match.length;\n      if (len === 1) {\n        return qmark;\n      }\n      return qmark + '{' + len + '}';\n    });\n\n    // escape '.abc' => '\\\\.abc'\n    glob._replace(/\\.([*\\w]+)/g, '\\\\.$1');\n    // fix '[^\\\\\\\\/]'\n    glob._replace(/\\[\\^[\\\\\\/]+\\]/g, qmark);\n    // '///' => '\\/'\n    glob._replace(/\\/+/g, '\\\\/');\n    // '\\\\\\\\\\\\' => '\\\\'\n    glob._replace(/\\\\{2,}/g, '\\\\');\n  }\n\n  // unescape previously escaped patterns\n  glob.unescape(glob.pattern);\n  glob._replace('__UNESC_STAR__', '*');\n\n  // escape dots that follow qmarks\n  glob._replace('?.', '?\\\\.');\n\n  // remove unnecessary slashes in character classes\n  glob._replace('[^\\\\/]', qmark);\n\n  if (glob.pattern.length > 1) {\n    if (/^[\\[?*]/.test(glob.pattern)) {\n      // only prepend the string if we don't want to match dotfiles\n      glob.pattern = (opts.dot ? dotfiles : nodot) + glob.pattern;\n    }\n  }\n\n  return glob;\n}\n\n/**\n * Collapse repeated character sequences.\n *\n * ```js\n * collapse('a/../../../b', '../');\n * //=> 'a/../b'\n * ```\n *\n * @param  {String} `str`\n * @param  {String} `ch` Character sequence to collapse\n * @return {String}\n */\n\nfunction collapse(str, ch) {\n  var res = str.split(ch);\n  var isFirst = res[0] === '';\n  var isLast = res[res.length - 1] === '';\n  res = res.filter(Boolean);\n  if (isFirst) res.unshift('');\n  if (isLast) res.push('');\n  return res.join(ch);\n}\n\n/**\n * Negate slashes in exclusion ranges, per glob spec:\n *\n * ```js\n * negateSlash('[^foo]');\n * //=> '[^\\\\/foo]'\n * ```\n *\n * @param  {String} `str` glob pattern\n * @return {String}\n */\n\nfunction negateSlash(str) {\n  return str.replace(/\\[\\^([^\\]]*?)\\]/g, function(match, inner) {\n    if (inner.indexOf('/') === -1) {\n      inner = '\\\\/' + inner;\n    }\n    return '[^' + inner + ']';\n  });\n}\n\n/**\n * Escape imbalanced braces/bracket. This is a very\n * basic, naive implementation that only does enough\n * to serve the purpose.\n */\n\nfunction balance(str, a, b) {\n  var aarr = str.split(a);\n  var alen = aarr.join('').length;\n  var blen = str.split(b).join('').length;\n\n  if (alen !== blen) {\n    str = aarr.join('\\\\' + a);\n    return str.split(b).join('\\\\' + b);\n  }\n  return str;\n}\n\n/**\n * Special patterns to be converted to regex.\n * Heuristics are used to simplify patterns\n * and speed up processing.\n */\n\n/* eslint no-multi-spaces: 0 */\nvar qmark       = '[^/]';\nvar star        = qmark + '*?';\nvar nodot       = '(?!\\\\.)(?=.)';\nvar dotfileGlob = '(?:\\\\/|^)\\\\.{1,2}($|\\\\/)';\nvar dotfiles    = '(?!' + dotfileGlob + ')(?=.)';\nvar twoStarDot  = '(?:(?!' + dotfileGlob + ').)*?';\n\n/**\n * Create a regex for `*`.\n *\n * If `dot` is true, or the pattern does not begin with\n * a leading star, then return the simpler regex.\n */\n\nfunction oneStar(dotfile) {\n  return dotfile ? '(?!' + dotfileGlob + ')(?=.)' + star : (nodot + star);\n}\n\nfunction globstar(dotfile) {\n  if (dotfile) { return twoStarDot; }\n  return '(?:(?!(?:\\\\/|^)\\\\.).)*?';\n}\n","/*!\n * micromatch <https://github.com/jonschlinkert/micromatch>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar expand = require('./lib/expand');\nvar utils = require('./lib/utils');\n\n/**\n * The main function. Pass an array of filepaths,\n * and a string or array of glob patterns\n *\n * @param  {Array|String} `files`\n * @param  {Array|String} `patterns`\n * @param  {Object} `opts`\n * @return {Array} Array of matches\n */\n\nfunction micromatch(files, patterns, opts) {\n  if (!files || !patterns) return [];\n  opts = opts || {};\n\n  if (typeof opts.cache === 'undefined') {\n    opts.cache = true;\n  }\n\n  if (!Array.isArray(patterns)) {\n    return match(files, patterns, opts);\n  }\n\n  var len = patterns.length, i = 0;\n  var omit = [], keep = [];\n\n  while (len--) {\n    var glob = patterns[i++];\n    if (typeof glob === 'string' && glob.charCodeAt(0) === 33 /* ! */) {\n      omit.push.apply(omit, match(files, glob.slice(1), opts));\n    } else {\n      keep.push.apply(keep, match(files, glob, opts));\n    }\n  }\n  return utils.diff(keep, omit);\n}\n\n/**\n * Return an array of files that match the given glob pattern.\n *\n * This function is called by the main `micromatch` function If you only\n * need to pass a single pattern you might get very minor speed improvements\n * using this function.\n *\n * @param  {Array} `files`\n * @param  {String} `pattern`\n * @param  {Object} `options`\n * @return {Array}\n */\n\nfunction match(files, pattern, opts) {\n  if (utils.typeOf(files) !== 'string' && !Array.isArray(files)) {\n    throw new Error(msg('match', 'files', 'a string or array'));\n  }\n\n  files = utils.arrayify(files);\n  opts = opts || {};\n\n  var negate = opts.negate || false;\n  var orig = pattern;\n\n  if (typeof pattern === 'string') {\n    negate = pattern.charAt(0) === '!';\n    if (negate) {\n      pattern = pattern.slice(1);\n    }\n\n    // we need to remove the character regardless,\n    // so the above logic is still needed\n    if (opts.nonegate === true) {\n      negate = false;\n    }\n  }\n\n  var _isMatch = matcher(pattern, opts);\n  var len = files.length, i = 0;\n  var res = [];\n\n  while (i < len) {\n    var file = files[i++];\n    var fp = utils.unixify(file, opts);\n\n    if (!_isMatch(fp)) { continue; }\n    res.push(fp);\n  }\n\n  if (res.length === 0) {\n    if (opts.failglob === true) {\n      throw new Error('micromatch.match() found no matches for: \"' + orig + '\".');\n    }\n\n    if (opts.nonull || opts.nullglob) {\n      res.push(utils.unescapeGlob(orig));\n    }\n  }\n\n  // if `negate` was defined, diff negated files\n  if (negate) { res = utils.diff(files, res); }\n\n  // if `ignore` was defined, diff ignored filed\n  if (opts.ignore && opts.ignore.length) {\n    pattern = opts.ignore;\n    opts = utils.omit(opts, ['ignore']);\n    res = utils.diff(res, micromatch(res, pattern, opts));\n  }\n\n  if (opts.nodupes) {\n    return utils.unique(res);\n  }\n  return res;\n}\n\n/**\n * Returns a function that takes a glob pattern or array of glob patterns\n * to be used with `Array#filter()`. (Internally this function generates\n * the matching function using the [matcher] method).\n *\n * ```js\n * var fn = mm.filter('[a-c]');\n * ['a', 'b', 'c', 'd', 'e'].filter(fn);\n * //=> ['a', 'b', 'c']\n * ```\n * @param  {String|Array} `patterns` Can be a glob or array of globs.\n * @param  {Options} `opts` Options to pass to the [matcher] method.\n * @return {Function} Filter function to be passed to `Array#filter()`.\n */\n\nfunction filter(patterns, opts) {\n  if (!Array.isArray(patterns) && typeof patterns !== 'string') {\n    throw new TypeError(msg('filter', 'patterns', 'a string or array'));\n  }\n\n  patterns = utils.arrayify(patterns);\n  var len = patterns.length, i = 0;\n  var patternMatchers = Array(len);\n  while (i < len) {\n    patternMatchers[i] = matcher(patterns[i++], opts);\n  }\n\n  return function(fp) {\n    if (fp == null) return [];\n    var len = patternMatchers.length, i = 0;\n    var res = true;\n\n    fp = utils.unixify(fp, opts);\n    while (i < len) {\n      var fn = patternMatchers[i++];\n      if (!fn(fp)) {\n        res = false;\n        break;\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Returns true if the filepath contains the given\n * pattern. Can also return a function for matching.\n *\n * ```js\n * isMatch('foo.md', '*.md', {});\n * //=> true\n *\n * isMatch('*.md', {})('foo.md')\n * //=> true\n * ```\n * @param  {String} `fp`\n * @param  {String} `pattern`\n * @param  {Object} `opts`\n * @return {Boolean}\n */\n\nfunction isMatch(fp, pattern, opts) {\n  if (typeof fp !== 'string') {\n    throw new TypeError(msg('isMatch', 'filepath', 'a string'));\n  }\n\n  fp = utils.unixify(fp, opts);\n  if (utils.typeOf(pattern) === 'object') {\n    return matcher(fp, pattern);\n  }\n  return matcher(pattern, opts)(fp);\n}\n\n/**\n * Returns true if the filepath matches the\n * given pattern.\n */\n\nfunction contains(fp, pattern, opts) {\n  if (typeof fp !== 'string') {\n    throw new TypeError(msg('contains', 'pattern', 'a string'));\n  }\n\n  opts = opts || {};\n  opts.contains = (pattern !== '');\n  fp = utils.unixify(fp, opts);\n\n  if (opts.contains && !utils.isGlob(pattern)) {\n    return fp.indexOf(pattern) !== -1;\n  }\n  return matcher(pattern, opts)(fp);\n}\n\n/**\n * Returns true if a file path matches any of the\n * given patterns.\n *\n * @param  {String} `fp` The filepath to test.\n * @param  {String|Array} `patterns` Glob patterns to use.\n * @param  {Object} `opts` Options to pass to the `matcher()` function.\n * @return {String}\n */\n\nfunction any(fp, patterns, opts) {\n  if (!Array.isArray(patterns) && typeof patterns !== 'string') {\n    throw new TypeError(msg('any', 'patterns', 'a string or array'));\n  }\n\n  patterns = utils.arrayify(patterns);\n  var len = patterns.length;\n\n  fp = utils.unixify(fp, opts);\n  while (len--) {\n    var isMatch = matcher(patterns[len], opts);\n    if (isMatch(fp)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Filter the keys of an object with the given `glob` pattern\n * and `options`\n *\n * @param  {Object} `object`\n * @param  {Pattern} `object`\n * @return {Array}\n */\n\nfunction matchKeys(obj, glob, options) {\n  if (utils.typeOf(obj) !== 'object') {\n    throw new TypeError(msg('matchKeys', 'first argument', 'an object'));\n  }\n\n  var fn = matcher(glob, options);\n  var res = {};\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) && fn(key)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\n/**\n * Return a function for matching based on the\n * given `pattern` and `options`.\n *\n * @param  {String} `pattern`\n * @param  {Object} `options`\n * @return {Function}\n */\n\nfunction matcher(pattern, opts) {\n  // pattern is a function\n  if (typeof pattern === 'function') {\n    return pattern;\n  }\n  // pattern is a regex\n  if (pattern instanceof RegExp) {\n    return function(fp) {\n      return pattern.test(fp);\n    };\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError(msg('matcher', 'pattern', 'a string, regex, or function'));\n  }\n\n  // strings, all the way down...\n  pattern = utils.unixify(pattern, opts);\n\n  // pattern is a non-glob string\n  if (!utils.isGlob(pattern)) {\n    return utils.matchPath(pattern, opts);\n  }\n  // pattern is a glob string\n  var re = makeRe(pattern, opts);\n\n  // `matchBase` is defined\n  if (opts && opts.matchBase) {\n    return utils.hasFilename(re, opts);\n  }\n  // `matchBase` is not defined\n  return function(fp) {\n    fp = utils.unixify(fp, opts);\n    return re.test(fp);\n  };\n}\n\n/**\n * Create and cache a regular expression for matching\n * file paths.\n *\n * If the leading character in the `glob` is `!`, a negation\n * regex is returned.\n *\n * @param  {String} `glob`\n * @param  {Object} `options`\n * @return {RegExp}\n */\n\nfunction toRegex(glob, options) {\n  // clone options to prevent  mutating the original object\n  var opts = Object.create(options || {});\n  var flags = opts.flags || '';\n  if (opts.nocase && flags.indexOf('i') === -1) {\n    flags += 'i';\n  }\n\n  var parsed = expand(glob, opts);\n\n  // pass in tokens to avoid parsing more than once\n  opts.negated = opts.negated || parsed.negated;\n  opts.negate = opts.negated;\n  glob = wrapGlob(parsed.pattern, opts);\n  var re;\n\n  try {\n    re = new RegExp(glob, flags);\n    return re;\n  } catch (err) {\n    err.reason = 'micromatch invalid regex: (' + re + ')';\n    if (opts.strict) throw new SyntaxError(err);\n  }\n\n  // we're only here if a bad pattern was used and the user\n  // passed `options.silent`, so match nothing\n  return /$^/;\n}\n\n/**\n * Create the regex to do the matching. If the leading\n * character in the `glob` is `!` a negation regex is returned.\n *\n * @param {String} `glob`\n * @param {Boolean} `negate`\n */\n\nfunction wrapGlob(glob, opts) {\n  var prefix = (opts && !opts.contains) ? '^' : '';\n  var after = (opts && !opts.contains) ? '$' : '';\n  glob = ('(?:' + glob + ')' + after);\n  if (opts && opts.negate) {\n    return prefix + ('(?!^' + glob + ').*$');\n  }\n  return prefix + glob;\n}\n\n/**\n * Create and cache a regular expression for matching file paths.\n * If the leading character in the `glob` is `!`, a negation\n * regex is returned.\n *\n * @param  {String} `glob`\n * @param  {Object} `options`\n * @return {RegExp}\n */\n\nfunction makeRe(glob, opts) {\n  if (utils.typeOf(glob) !== 'string') {\n    throw new Error(msg('makeRe', 'glob', 'a string'));\n  }\n  return utils.cache(toRegex, glob, opts);\n}\n\n/**\n * Make error messages consistent. Follows this format:\n *\n * ```js\n * msg(methodName, argNumber, nativeType);\n * // example:\n * msg('matchKeys', 'first', 'an object');\n * ```\n *\n * @param  {String} `method`\n * @param  {String} `num`\n * @param  {String} `type`\n * @return {String}\n */\n\nfunction msg(method, what, type) {\n  return 'micromatch.' + method + '(): ' + what + ' should be ' + type + '.';\n}\n\n/**\n * Public methods\n */\n\n/* eslint no-multi-spaces: 0 */\nmicromatch.any       = any;\nmicromatch.braces    = micromatch.braceExpand = utils.braces;\nmicromatch.contains  = contains;\nmicromatch.expand    = expand;\nmicromatch.filter    = filter;\nmicromatch.isMatch   = isMatch;\nmicromatch.makeRe    = makeRe;\nmicromatch.match     = match;\nmicromatch.matcher   = matcher;\nmicromatch.matchKeys = matchKeys;\n\n/**\n * Expose `micromatch`\n */\n\nmodule.exports = micromatch;\n","import { extname, resolve, sep } from 'path';\nimport { walk } from 'estree-walker';\nimport mm from 'micromatch';\n\nfunction addExtension ( filename, ext ) {\n\tif ( ext === void 0 ) ext = '.js';\n\n\tif ( !extname( filename ) ) { filename += ext; }\n\treturn filename;\n}\n\nvar blockDeclarations = {\n\t'const': true,\n\t'let': true\n};\n\nvar extractors = {\n\tIdentifier: function Identifier ( names, param ) {\n\t\tnames.push( param.name );\n\t},\n\n\tObjectPattern: function ObjectPattern ( names, param ) {\n\t\tparam.properties.forEach( function (prop) {\n\t\t\textractors[ prop.key.type ]( names, prop.key );\n\t\t});\n\t},\n\n\tArrayPattern: function ArrayPattern ( names, param ) {\n\t\tparam.elements.forEach( function (element) {\n\t\t\tif ( element ) { extractors[ element.type ]( names, element ); }\n\t\t});\n\t},\n\n\tRestElement: function RestElement ( names, param ) {\n\t\textractors[ param.argument.type ]( names, param.argument );\n\t},\n\n\tAssignmentPattern: function AssignmentPattern ( names, param ) {\n\t\treturn extractors[ param.left.type ]( names, param.left );\n\t}\n};\n\nfunction extractNames ( param ) {\n\tvar names = [];\n\n\textractors[ param.type ]( names, param );\n\treturn names;\n}\n\nvar Scope = function Scope ( options ) {\n\tvar this$1 = this;\n\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.isBlockScope = !!options.block;\n\n\tthis.declarations = Object.create( null );\n\n\tif ( options.params ) {\n\t\toptions.params.forEach( function (param) {\n\t\t\textractNames( param ).forEach( function (name) {\n\t\t\t\tthis$1.declarations[ name ] = true;\n\t\t\t});\n\t\t});\n\t}\n};\n\nScope.prototype.addDeclaration = function addDeclaration ( node, isBlockDeclaration, isVar ) {\n\t\tvar this$1 = this;\n\n\tif ( !isBlockDeclaration && this.isBlockScope ) {\n\t\t// it's a `var` or function node, and this\n\t\t// is a block scope, so we need to go up\n\t\tthis.parent.addDeclaration( node, isBlockDeclaration, isVar );\n\t} else {\n\t\textractNames( node.id ).forEach( function (name) {\n\t\t\tthis$1.declarations[ name ] = true;\n\t\t});\n\t}\n};\n\nScope.prototype.contains = function contains ( name ) {\n\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n};\n\n\nfunction attachScopes ( ast, propertyName ) {\n\tif ( propertyName === void 0 ) propertyName = 'scope';\n\n\tvar scope = new Scope();\n\n\twalk( ast, {\n\t\tenter: function enter ( node, parent ) {\n\t\t\t// function foo () {...}\n\t\t\t// class Foo {...}\n\t\t\tif ( /(Function|Class)Declaration/.test( node.type ) ) {\n\t\t\t\tscope.addDeclaration( node, false, false );\n\t\t\t}\n\n\t\t\t// var foo = 1\n\t\t\tif ( node.type === 'VariableDeclaration' ) {\n\t\t\t\tvar isBlockDeclaration = blockDeclarations[ node.kind ];\n\n\t\t\t\tnode.declarations.forEach( function (declaration) {\n\t\t\t\t\tscope.addDeclaration( declaration, isBlockDeclaration, true );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar newScope;\n\n\t\t\t// create new function scope\n\t\t\tif ( /Function/.test( node.type ) ) {\n\t\t\t\tnewScope = new Scope({\n\t\t\t\t\tparent: scope,\n\t\t\t\t\tblock: false,\n\t\t\t\t\tparams: node.params\n\t\t\t\t});\n\n\t\t\t\t// named function expressions - the name is considered\n\t\t\t\t// part of the function's scope\n\t\t\t\tif ( node.type === 'FunctionExpression' && node.id ) {\n\t\t\t\t\tnewScope.addDeclaration( node, false, false );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create new block scope\n\t\t\tif ( node.type === 'BlockStatement' && !/Function/.test( parent.type ) ) {\n\t\t\t\tnewScope = new Scope({\n\t\t\t\t\tparent: scope,\n\t\t\t\t\tblock: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// catch clause has its own block scope\n\t\t\tif ( node.type === 'CatchClause' ) {\n\t\t\t\tnewScope = new Scope({\n\t\t\t\t\tparent: scope,\n\t\t\t\t\tparams: [ node.param ],\n\t\t\t\t\tblock: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( newScope ) {\n\t\t\t\tObject.defineProperty( node, propertyName, {\n\t\t\t\t\tvalue: newScope,\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\n\t\t\t\tscope = newScope;\n\t\t\t}\n\t\t},\n\t\tleave: function leave ( node ) {\n\t\t\tif ( node[ propertyName ] ) { scope = scope.parent; }\n\t\t}\n\t});\n\n\treturn scope;\n}\n\nfunction ensureArray ( thing ) {\n\tif ( Array.isArray( thing ) ) { return thing; }\n\tif ( thing == undefined ) { return []; }\n\treturn [ thing ];\n}\n\nfunction createFilter ( include, exclude ) {\n\tvar getMatcher = function (id) { return ( isRegexp( id ) ? id : { test: mm.matcher( resolve( id ) ) } ); };\n\tinclude = ensureArray( include ).map( getMatcher );\n\texclude = ensureArray( exclude ).map( getMatcher );\n\n\treturn function ( id ) {\n\n\t\tif ( typeof id !== 'string' ) { return false; }\n\t\tif ( /\\0/.test( id ) ) { return false; }\n\n\t\tid = id.split( sep ).join( '/' );\n\n\t\tfor ( var i = 0; i < exclude.length; ++i ) {\n\t\t\tvar matcher = exclude[i];\n\t\t\tif ( matcher.test( id ) ) { return false; }\n\t\t}\n\n\t\tfor ( var i$1 = 0; i$1 < include.length; ++i$1 ) {\n\t\t\tvar matcher$1 = include[i$1];\n\t\t\tif ( matcher$1.test( id ) ) { return true; }\n\t\t}\n\n\t\treturn !include.length;\n\t};\n}\n\nfunction isRegexp ( val ) {\n\treturn val instanceof RegExp;\n}\n\nvar reservedWords = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public'.split( ' ' );\nvar builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl'.split( ' ' );\n\nvar blacklisted = Object.create( null );\nreservedWords.concat( builtins ).forEach( function (word) { return blacklisted[ word ] = true; } );\n\nfunction makeLegalIdentifier ( str ) {\n\tstr = str\n\t\t.replace( /-(\\w)/g, function ( _, letter ) { return letter.toUpperCase(); } )\n\t\t.replace( /[^$_a-zA-Z0-9]/g, '_' );\n\n\tif ( /\\d/.test( str[0] ) || blacklisted[ str ] ) { str = \"_\" + str; }\n\n\treturn str;\n}\n\nexport { addExtension, attachScopes, createFilter, makeLegalIdentifier };\n","export default function extract(txt){\n  var test = /pliny\\.\\w+/g,\n    left = 0,\n    outputLeft = \"\",\n    outputRight = \"\",\n\n    startLib = /\\s*\\/\\/ BEGIN PLINY\\s*/,\n    startLibMatch = txt.match(startLib),\n    startLibLength = startLibMatch[0].length,\n    startLibIndex = startLibMatch.index,\n    startLibEnd = startLibIndex + startLibLength,\n\n    endLib = /\\s*\\/\\/ END PLINY\\s*/,\n    endLibMatch = txt.match(endLib),\n    endLibLength = endLibMatch[0].length,\n    endLibStart = endLibMatch.index,\n    endLibIndex = endLibStart + endLibLength,\n\n    sub = txt.substring(startLibIndex, endLibIndex);\n\n  txt = txt.substring(0, startLibIndex) + txt.substring(endLibIndex);\n\n  var matches = test.exec(txt),\n    stringDelims = ['\"', \"'\", \"`\"];\n  while (matches) {\n    var sub = txt.substring(left, matches.index),\n      depth = 0,\n      inString = false,\n      curDelim = null,\n      found = false;\n\n    outputLeft += sub;\n\n    for (left = matches.index + matches.length; left < txt.length; ++left) {\n      const curChar = txt[left],\n        delimIdx = stringDelims.indexOf(curChar),\n        stringStarted = !inString && delimIdx > -1,\n        stringEnded = inString && curChar === curDelim,\n        escaped = left > 0 && txt[left - 1] === \"\\\\\";\n\n      if ((stringStarted || stringEnded) && !escaped) {\n        inString = !inString;\n        if(inString) {\n          curDelim = curChar;\n        }\n        else{\n          curDelim = null;\n        }\n      }\n\n      if (!inString) {\n        if (txt[left] === \"(\") {\n          found = true;\n          ++depth;\n        }\n        else if (txt[left] === \")\") {\n          --depth;\n        }\n      }\n      if (depth === 0 && found) {\n        break;\n      }\n    }\n    while (left < txt.length && /[;\\) \\r\\n]/.test(txt[left])) {\n      left++;\n    }\n\n    outputRight += txt.substring(matches.index, left);\n    matches = test.exec(txt);\n  }\n  outputLeft += txt.substring(left);\n  return {\n    left: outputLeft,\n    right: outputRight\n  };\n}\n","import fs from \"fs\";\nimport { createFilter } from \"rollup-pluginutils\";\nimport extract from \"./extract\";\n\nexport { extract };\n\nconst stringChars = [\"\\\"\", \"'\", \"`\"];\n\n// Strip pliny calls out of a source file and deposit them into a separate file.\nexport function carve (source, libFile, docFile, callback) {\n  fs.readFile(source, \"utf-8\", function (err, txt) {\n    var output = this.extract(txt);\n    this.write(libFile, docFile, output, callback);\n  });\n}\n\nexport function write(libFile, outputLeft, docFile, outputRight, callback) {\n  if(docFile) {\n    if(!outputRight) {\n      console.warn(\"no documentation to write to \" + docFile);\n    }\n    else{\n      callback = (function(cb) {\n        fs.writeFile(docFile, outputRight, cb);\n      }.bind(null, callback));\n    }\n  }\n  fs.writeFile(libFile, outputLeft, callback);\n}\n\nexport function rollupPlugin(options) {\n  options = options || {};\n\n  var filter = createFilter( options.include, options.exclude ),\n    documentation = \"\";\n\n  return {\n    name: \"pliny\",\n\n    transform ( code, id ) {\n      if (filter(id) && !/package\\.json$/.test(id) && code.indexOf(\"pliny\") > -1) {\n        var obj = extract(code);\n        documentation = obj.right;\n        return obj.left;\n      }\n    },\n\n    onwrite(options) {\n      var docFile = options.dest.replace(/(\\.min)?(\\.\\w+)$/,  \".doc$2\");\n      return new Promise(function(resolve, reject) {\n        if(!documentation) {\n          console.warn(\"no documentation to write to \" + docFile);\n          resolve(options.dest);\n        }\n        else{\n          fs.writeFile(docFile, documentation, function(){\n            resolve(options.dest);\n          });\n        }\n      });\n    }\n  };\n};\n"],"names":["flatten","toString","isArray","isBuffer","typeOf","isNumber","isObject","sep","repeat","randomize","wrap","repeatStr","fill","cache","tokens","expand","path","filter","isPosixBracket","toRegex","isExtglob","removeTrailingSeparator","forIn","forOwn","isglob","parent","isGlob","findBase","extglob","dotfile","isPrimitive","equal","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","fileRe","utils","chars","glob","Glob","mm","resolve"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;AAOA,WAAc,GAAG,SAAS,aAAa,GAAG;EACxC,OAAO,aAAa,CAAC;CACtB,CAAC;;ACTF;;;;;;;AAOA,AAEA,WAAc,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE;EACrC,OAAO,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;CACtB,CAAC;;AAEF,SAAS,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;EACtB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EACrB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;EAEb,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE;IAClB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;MACtB,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAChB,MAAM;MACL,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACf;GACF;EACD,OAAO,GAAG,CAAC;CACZ;;AChBD,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBrB,SAAS,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE;EACzB,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC;EAC/B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7B,IAAI,GAAG,GAAG,EAAE,EAAE,MAAM,CAAC;;EAErB,IAAI,OAAO,KAAK,CAAC,EAAE;IACjB,OAAO,GAAG,CAAC;GACZ;;EAED,IAAI,OAAO,GAAG,CAAC,EAAE;IACf,MAAM,GAAGA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;GAC5C;;EAED,OAAO,EAAE,CAAC,GAAG,GAAG,EAAE;IAChB,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAClB;GACF;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;AAMD,WAAc,GAAG,IAAI,CAAC;;ACzDtB;;;;;;;AAOA,AAEA,WAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;EACpC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IACvB,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;GACvD;;EAED,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EACrB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEX,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE;IAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;IAEd,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;MAC1B,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE;QACrB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;OACpB;KACF;GACF;EACD,OAAO,GAAG,CAAC;CACZ,CAAC;;AC3BF,IAAIC,UAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;;AAE3B,YAAc,GAAG,KAAK,CAAC,OAAO,IAAI,UAAU,GAAG,EAAE;EAC/C,OAAOA,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC;CAC/C,CAAC;;ACOF,YAAc,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;EACtC,OAAO,GAAG,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAIC,QAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC;CACzE,CAAC;;ACbF;;;;;;;;;AASA,YAAc,GAAG,UAAU,GAAG,EAAE;EAC9B,OAAO,GAAG,IAAI,IAAI,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC;CAC9E,CAAA;;AAED,SAAS,QAAQ,EAAE,GAAG,EAAE;EACtB,OAAO,CAAC,CAAC,GAAG,CAAC,WAAW,IAAI,OAAO,GAAG,CAAC,WAAW,CAAC,QAAQ,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;CAC5G;;;AAGD,SAAS,YAAY,EAAE,GAAG,EAAE;EAC1B,OAAO,OAAO,GAAG,CAAC,WAAW,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC7G;;ACnBD,IAAID,UAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;;;;;;;;AASzC,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;;EAEpC,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;IAC9B,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,GAAG,KAAK,IAAI,EAAE;IAChB,OAAO,MAAM,CAAC;GACf;EACD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,YAAY,OAAO,EAAE;IAC3D,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,YAAY,QAAQ,EAAE;IACxD,OAAO,UAAU,CAAC;GACnB;;;EAGD,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IAC9D,OAAO,OAAO,CAAC;GAChB;;;EAGD,IAAI,GAAG,YAAY,MAAM,EAAE;IACzB,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,GAAG,YAAY,IAAI,EAAE;IACvB,OAAO,MAAM,CAAC;GACf;;;EAGD,IAAI,IAAI,GAAGA,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;EAE9B,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,IAAI,KAAK,eAAe,EAAE;IAC5B,OAAO,MAAM,CAAC;GACf;EACD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,gBAAgB,EAAE;IAC7B,OAAO,OAAO,CAAC;GAChB;;;EAGD,IAAIE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACjB,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,4BAA4B,EAAE;IACzC,OAAO,mBAAmB,CAAC;GAC5B;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;;;EAGD,OAAO,QAAQ,CAAC;CACjB,CAAC;;ACxGF,YAAc,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;EACtC,IAAI,IAAI,GAAGC,QAAM,CAAC,GAAG,CAAC,CAAC;EACvB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,QAAQ,EAAE;IAC1C,OAAO,KAAK,CAAC;GACd;EACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EACb,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC;CACvC,CAAC;;ACjBF,IAAIH,UAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;;;;;;;;AASzC,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;;EAEpC,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;IAC9B,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,GAAG,KAAK,IAAI,EAAE;IAChB,OAAO,MAAM,CAAC;GACf;EACD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,YAAY,OAAO,EAAE;IAC3D,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,YAAY,QAAQ,EAAE;IACxD,OAAO,UAAU,CAAC;GACnB;;;EAGD,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IAC9D,OAAO,OAAO,CAAC;GAChB;;;EAGD,IAAI,GAAG,YAAY,MAAM,EAAE;IACzB,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,GAAG,YAAY,IAAI,EAAE;IACvB,OAAO,MAAM,CAAC;GACf;;;EAGD,IAAI,IAAI,GAAGA,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;EAE9B,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,IAAI,KAAK,eAAe,EAAE;IAC5B,OAAO,MAAM,CAAC;GACf;EACD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,gBAAgB,EAAE;IAC7B,OAAO,OAAO,CAAC;GAChB;;;EAGD,IAAIE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACjB,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,4BAA4B,EAAE;IACzC,OAAO,mBAAmB,CAAC;GAC5B;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;;;EAGD,OAAO,QAAQ,CAAC;CACjB,CAAC;;ACxGF,YAAc,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;EACtC,IAAI,IAAI,GAAGC,QAAM,CAAC,GAAG,CAAC,CAAC;;EAEvB,IAAI,IAAI,KAAK,QAAQ,EAAE;IACrB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC;GAC/B,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,KAAK,CAAC;GACd;;EAED,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;CAC7B,CAAC;;ACpBF,IAAIH,UAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;;;;;;;;AASzC,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;;EAEpC,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;IAC9B,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,GAAG,KAAK,IAAI,EAAE;IAChB,OAAO,MAAM,CAAC;GACf;EACD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,YAAY,OAAO,EAAE;IAC3D,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;IACpD,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,YAAY,QAAQ,EAAE;IACxD,OAAO,UAAU,CAAC;GACnB;;;EAGD,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IAC9D,OAAO,OAAO,CAAC;GAChB;;;EAGD,IAAI,GAAG,YAAY,MAAM,EAAE;IACzB,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,GAAG,YAAY,IAAI,EAAE;IACvB,OAAO,MAAM,CAAC;GACf;;;EAGD,IAAI,IAAI,GAAGA,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;EAE9B,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;EACD,IAAI,IAAI,KAAK,eAAe,EAAE;IAC5B,OAAO,MAAM,CAAC;GACf;EACD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,gBAAgB,EAAE;IAC7B,OAAO,OAAO,CAAC;GAChB;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;;;EAGD,IAAIE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACjB,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAO,KAAK,CAAC;GACd;EACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;IAC/B,OAAO,SAAS,CAAC;GAClB;EACD,IAAI,IAAI,KAAK,iBAAiB,EAAE;IAC9B,OAAO,QAAQ,CAAC;GACjB;;;EAGD,IAAI,IAAI,KAAK,oBAAoB,EAAE;IACjC,OAAO,WAAW,CAAC;GACpB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,4BAA4B,EAAE;IACzC,OAAO,mBAAmB,CAAC;GAC5B;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,qBAAqB,EAAE;IAClC,OAAO,YAAY,CAAC;GACrB;EACD,IAAI,IAAI,KAAK,sBAAsB,EAAE;IACnC,OAAO,aAAa,CAAC;GACtB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;EACD,IAAI,IAAI,KAAK,uBAAuB,EAAE;IACpC,OAAO,cAAc,CAAC;GACvB;;;EAGD,OAAO,QAAQ,CAAC;CACjB,CAAC;;;;;;ACtGF,YAAc,GAAG,UAAU,CAAC;;;;;;AAM5B,IAAI,IAAI,GAAG;EACT,KAAK,EAAE,4BAA4B;EACnC,KAAK,EAAE,4BAA4B;EACnC,MAAM,EAAE,YAAY;EACpB,OAAO,EAAE,yBAAyB;CACnC,CAAC;;AAEF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;;;;;;;;;;;;;AAahE,SAAS,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;EAC5C,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;IAClC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;GAC3D;;EAED,IAAI,MAAM,GAAG,KAAK,CAAC;EACnB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;KAEzB,MAAM,IAAIE,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC5B,OAAO,GAAG,EAAE,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;KAC/C;GACF;;EAED,IAAID,QAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;IACjE,OAAO,GAAG,MAAM,CAAC;IACjB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;IACxB,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IACxB,MAAM,GAAG,IAAI,CAAC;GACf;;EAED,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;EACzB,IAAI,IAAI,GAAG,EAAE,CAAC;EACd,IAAI,GAAG,GAAG,EAAE,CAAC;;;EAGb,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;EACpD,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;EACpD,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;EACpD,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;EACrD,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC;EACtD,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;EAClD,IAAI,MAAM,EAAE,IAAI,IAAI,OAAO,CAAC;;EAE5B,OAAO,MAAM,EAAE,EAAE;IACf,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;GAC/D;EACD,OAAO,GAAG,CAAC;CACZ,AAAC;;ACjFF;;;;;;;AAOA;;;;AAMA,IAAI,GAAG,GAAG,EAAE,CAAC;AACb,IAAI,KAAK,CAAC;;;;;;AAMV,YAAc,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;AAoBxB,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;EACxB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;GAC1C;;;EAGD,IAAI,GAAG,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC;EAC1B,IAAI,GAAG,KAAK,CAAC,EAAE,OAAO,GAAG,GAAG,GAAG,CAAC;;EAEhC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;EAC3B,IAAI,KAAK,KAAK,GAAG,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;IACjD,KAAK,GAAG,GAAG,CAAC;IACZ,GAAG,GAAG,EAAE,CAAC;GACV,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;IAC5B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;GAC3B;;EAED,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;IAClC,IAAI,GAAG,GAAG,CAAC,EAAE;MACX,GAAG,IAAI,GAAG,CAAC;KACZ;;IAED,GAAG,KAAK,CAAC,CAAC;IACV,GAAG,IAAI,GAAG,CAAC;GACZ;;EAED,GAAG,IAAI,GAAG,CAAC;EACX,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EACzB,OAAO,GAAG,CAAC;CACZ;;ACrED;;;;;;;AAOA,AAEA,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;EACzC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;EAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;GACd;;EAED,OAAO,GAAG,CAAC;CACZ,CAAC;;;;;;ACEF,YAAc,GAAG,SAAS,CAAC;;;;;;;;;;;;AAY3B,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;EAC1C,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;IAC1B,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;GAChF;;EAED,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;IAC9B,EAAE,GAAG,IAAI,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;GACtC;;EAED,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;IACjC,EAAE,GAAG,OAAO,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;GAC5B;;EAED,IAAIE,QAAQ,CAAC,IAAI,CAAC,EAAE;IAClB,OAAO,GAAG,IAAI,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;GAC3B;;EAED,IAAI,MAAM,EAAE,KAAK,GAAG,KAAK,EAAEC,MAAG,GAAG,EAAE,CAAC;EACpC,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;;EAEzB,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;IACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;GACpB;;EAED,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;;;EAGzB,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;;EAEzB,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;;EAEpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;IAChC,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC;IACnC,MAAM,GAAG,IAAI,CAAC;IACd,KAAK,GAAG,IAAI,CAAC;IACbA,MAAG,GAAG,GAAG,CAAC;GACX;;;EAGD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEhC,IAAI,KAAK,EAAE;MACT,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;MACpB,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;;MAGjB,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,OAAOC,QAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;OAGrB,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,OAAO,CAACC,QAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;OAG1B,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,MAAM,GAAG,IAAI,CAAC;;;;OAIf,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,MAAM,GAAG,IAAI,CAAC;QACd,KAAK,GAAG,IAAI,CAAC;QACbF,MAAG,GAAG,CAAC,CAAC;;;;OAIT,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,MAAM,GAAG,IAAI,CAAC;QACd,KAAK,GAAG,IAAI,CAAC;QACbA,MAAG,GAAG,CAAC,CAAC;OACT;KACF,MAAM,IAAI,CAACF,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QAChB,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAC;OAClD;MACD,OAAO,IAAI,CAAC;KACb;GACF;;EAED,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAC5D,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MAChB,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAC;KAC9D;IACD,OAAO,IAAI,CAAC;GACb;;;;EAID,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;IAChE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MAChB,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAC;KAC9D;IACD,OAAO,IAAI,CAAC;GACb;;;EAGD,IAAI,MAAM,GAAGA,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,IAAI,MAAM,GAAGA,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhC,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE;IAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MAChB,MAAM,IAAI,SAAS,CAAC,+DAA+D,CAAC,CAAC;KACtF;IACD,OAAO,IAAI,CAAC;GACb;;;;EAID,IAAI,KAAK,GAAG,MAAM,CAAC;EACnB,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;;EAG3B,IAAI,KAAK,EAAE;;IAET,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GAChB,MAAM;;IAEL,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;GACrB;;;EAGD,IAAI,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;;;EAGzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAClB,MAAM,GAAG,KAAK,CAAC;IACf,KAAK,GAAG,KAAK,CAAC;GACf;;;EAGD,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EACrC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC;EACvB,IAAI,EAAE,GAAG,CAAC,CAAC;;;EAGX,IAAI,KAAK,EAAE;IACT,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE;;MAEjD,IAAIE,MAAG,KAAK,GAAG,IAAIA,MAAG,KAAK,GAAG,EAAE;QAC9BA,MAAG,GAAG,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;OACvD;MACD,OAAOG,MAAI,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAEH,MAAG,EAAE,IAAI,CAAC,CAAC;KACxC;GACF;;EAED,OAAO,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;IACzC,IAAI,OAAO,IAAI,KAAK,EAAE;MACpB,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;KAClB;;;IAGD,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;MAC5B,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;;;KAG/B,MAAM,IAAI,CAAC,KAAK,EAAE;MACjB,IAAI,KAAK,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;QAC7B,GAAG,GAAG,IAAI,CAAC;OACZ,MAAM;QACL,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;OAC9B;;;KAGF,MAAM;MACL,GAAG,GAAG,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KAC7B;;;IAGD,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;IAGhC,IAAI,YAAY,EAAE;MAChB,CAAC,IAAI,GAAG,CAAC;KACV,MAAM;MACL,CAAC,IAAI,GAAG,CAAC;KACV;GACF;;;;;EAKD,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;;IAEvC,IAAIA,MAAG,KAAK,GAAG,IAAIA,MAAG,KAAK,GAAG,EAAE;MAC9BA,MAAG,GAAG,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;KACvD;IACD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IACvD,OAAOG,MAAI,CAAC,GAAG,EAAEH,MAAG,EAAE,IAAI,CAAC,CAAC;GAC7B;;EAED,OAAO,GAAG,CAAC;CACZ;;;;;;;AAOD,SAASG,MAAI,CAAC,GAAG,EAAEH,MAAG,EAAE,IAAI,EAAE;EAC5B,IAAIA,MAAG,KAAK,GAAG,EAAE,EAAEA,MAAG,GAAG,GAAG,CAAC,EAAE;EAC/B,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAACA,MAAG,CAAC,CAAC;EACxB,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;;;EAGnC,IAAIA,MAAG,KAAK,GAAG,EAAE;IACf,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC5B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;GACvB;;;EAGD,IAAIA,MAAG,KAAK,GAAG,EAAE;IACf,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG;QACrB,GAAG,GAAG,GAAG;QACT,GAAG,CAAC;IACR,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;GACvB;EACD,OAAO,CAAC,GAAG,CAAC,CAAC;CACd;;;;;;AAMD,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE;EACpD,IAAI,YAAY,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;EACnC,IAAI,KAAK,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;EACvC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE;EACjC,OAAO,KAAK,CAAC;CACd;;;;;;AAMD,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;EACrD,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;EAChD,OAAO,CAAC,OAAO,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACvC;;;;;;AAMD,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE;EACxD,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;EAC1D,IAAI,CAAC,MAAM,EAAE;IACX,OAAO,GAAG,CAAC;GACZ;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;AAMD,SAAS,UAAU,CAAC,IAAI,EAAE;EACxB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;CACjC;;;;;;AAMD,SAAS,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE;EAC9B,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;EAC9B,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC1C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;GAC3C;EACD,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;CACvB;;;;;;AAMD,SAAS,aAAa,CAAC,GAAG,EAAE;EAC1B,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;EACpB,OAAO,EAAE,KAAK,IAAI;OACb,EAAE,KAAK,GAAG;OACV,EAAE,KAAK,GAAG;OACV,EAAE,KAAK,GAAG;OACV,EAAE,KAAK,GAAG;OACV,EAAE,KAAK,GAAG;OACV,EAAE,KAAK,GAAG,CAAC;CACjB;;;;;;AAMD,SAAS,KAAK,CAAC,EAAE,EAAE;EACjB,OAAO,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;CAChC;;;;;;;AAOD,SAAS,MAAM,GAAG;EAChB,OAAO,gBAAgB,CAAC;CACzB;;;;;;;AAOD,SAAS,UAAU,CAAC,GAAG,EAAE;EACvB,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC9B;;;;;;;AAOD,SAAS,OAAO,CAAC,GAAG,EAAE;EACpB,OAAO,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC3C;;;;;;AAMD,SAAS,KAAK,CAAC,GAAG,EAAE;EAClB,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE;IACjC,OAAO,GAAG,CAAC;GACZ;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;;AAOD,SAAS,QAAQ,CAAC,GAAG,EAAE;EACrB,OAAO,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACtC;;;;;;;;;;AAUD,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;EAC9B,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;IACtC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACzB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;;IAEzB,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI;QAClB,IAAI;QACJ,IAAI,CAAC;;IAET,OAAO,UAAU,CAAC,EAAE;MAClB,OAAOI,QAAS,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;GACH;EACD,OAAO,KAAK,CAAC;CACd;;;;;;AAMD,SAAS,MAAM,CAAC,GAAG,EAAE;EACnB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;CAC9B;;AC5YD,YAAc,GAAG,SAAS,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;EACtD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;GACvD;;EAED,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;IACjC,EAAE,GAAG,OAAO,CAAC;IACb,OAAO,GAAG,EAAE,CAAC;GACd;;EAED,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;IAChC,OAAO,GAAG,EAAE,CAAC;IACb,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;GACvB;;;EAGD,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;EACzB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;EACtB,IAAI,GAAG,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;;;EAG5B,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;;;EAG/B,IAAI,OAAO,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;IAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;GACpB;;EAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChB,OAAOC,QAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;CAC1C,CAAC;;AC1CF;;;;;;;AAOA;;;;;;;;;;;;;AAeA,UAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE;EACxC,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,KAAK,EAAE;IACtC,IAAI,EAAE,GAAGH,WAAS,EAAE,CAAC;IACrBI,OAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;IAClB,OAAO,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;GAC3B,CAAC,CAAC;CACJ,CAAC;;;;;;;;;;;;;;;AAeF,SAAa,GAAG,SAAS,KAAK,CAAC,GAAG,EAAE;EAClC,OAAO,GAAG,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE;IACnD,OAAOA,OAAK,CAAC,EAAE,CAAC,CAAC;GAClB,CAAC,CAAC;CACJ,CAAC;;AAEF,SAASJ,WAAS,GAAG;EACnB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC7C;;AAED,IAAII,OAAK,GAAG,EAAE;;;;;;;;;;;;;;;;;;;AChCd,WAAc,GAAG,SAAS,GAAG,EAAE,OAAO,EAAE;EACtC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;GAC5C;EACD,OAAO,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;CAC7B,CAAC;;;;;;;;;;;;AAYF,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE;EACjC,IAAI,GAAG,KAAK,EAAE,EAAE;IACd,OAAO,EAAE,CAAC;GACX;;EAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IACvB,OAAO,GAAG,GAAG,CAAC;IACd,GAAG,GAAG,EAAE,CAAC;GACV;;EAED,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;EACzB,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;;EAEhB,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;IACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;GACrB;;EAED,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;EACjB,IAAI,GAAG,CAAC;;EAER,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;IAC9B,EAAE,GAAG,IAAI,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;GACX;;EAED,IAAI,EAAE,SAAS,YAAY,MAAM,CAAC,EAAE;IAClC,SAAS,GAAG,YAAY,EAAE,CAAC;GAC5B;;EAED,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;EACzC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEnB,OAAO,CAAC;IACN,KAAK,KAAK;MACR,OAAO,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,KAAK,KAAK;MACR,OAAO,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACpC,KAAK,KAAK;MACR,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrC,KAAK,GAAG;MACN,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC;IAC9B,KAAK,KAAK;MACR,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACxC,KAAK,IAAI;MACP,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrC,KAAK,KAAK,CAAC;IACX,KAAK,KAAK;MACR,OAAO,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,KAAK,IAAI;MACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;OACxB,MAAM;QACL,GAAG,GAAG,IAAI,CAAC;QACX,GAAG,GAAGC,QAAM,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;OACtC;GACJ;;EAED,IAAI,EAAE,OAAO,YAAY,MAAM,CAAC,EAAE;IAChC,OAAO,GAAG,UAAU,EAAE,CAAC;GACxB;;EAED,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9B,IAAI,KAAK,IAAI,IAAI,EAAE;IACjB,OAAO,CAAC,GAAG,CAAC,CAAC;GACd;;EAED,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI,KAAK,KAAK,EAAE,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;;EAEnC,IAAI,IAAI,EAAE,UAAU,CAAC;;EAErB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC9B,IAAI,GAAGC,QAAM,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;;GAE1B,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IAChD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;GAE/C,MAAM;IACL,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,OAAO,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAC3D;;IAED,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;IACzB,IAAI,UAAU,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;MACjC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAC/B;GACF;;EAED,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;EACtB,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;;EAEf,OAAO,GAAG,EAAE,EAAE;IACZ,IAAIC,OAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;IAErB,IAAI,YAAY,CAAC,IAAI,CAACA,OAAI,CAAC,EAAE;MAC3B,IAAI,UAAU,GAAG,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC;OACb,MAAM;QACL,OAAO,CAAC,GAAG,CAAC,CAAC;OACd;KACF;;IAED,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,EAAEA,OAAI,CAAC,CAAC;;IAEhC,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC3B,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC9B,MAAM,IAAI,GAAG,KAAK,EAAE,EAAE;MACrB,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;MAC1D,GAAG,CAAC,IAAI,CAAC,GAAG,GAAGF,QAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;KACzC;GACF;;EAED,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,OAAOG,QAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,EAAE;EACrD,OAAO,GAAG,CAAC;CACZ;;;;;;;;AAQD,SAAS,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;EACrC,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;IACjC,EAAE,GAAG,OAAO,CAAC;IACb,OAAO,GAAG,IAAI,CAAC;GAChB;;EAED,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;EACzB,IAAI,GAAG,GAAG,aAAa,CAAC;EACxB,IAAI,GAAG,GAAG,CAAC,CAAC;EACZ,IAAI,GAAG,CAAC;;EAER,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAC7B,IAAI,IAAI,CAAC,OAAO,EAAE;IAChB,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;GACjC;;EAED,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;EACvB,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EACrB,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,IAAI,CAAC,GAAG,CAAC,CAAC;;EAEV,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACnB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;IAE3B,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;MACd,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;KAEf,MAAM;MACL,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;MACxC,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;QACnC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;OAEf,MAAM;QACL,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAET,QAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;OACvC;KACF;GACF;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;;;;;;AAWD,SAAS,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE;EACrB,IAAI,EAAE,KAAK,GAAG,EAAE;IACd,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;GACjC;EACD,IAAI,EAAE,KAAK,GAAG,EAAE;IACd,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;GACjC;EACD,IAAI,EAAE,KAAK,GAAG,EAAE;IACd,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;GACjC;EACD,IAAI,EAAE,KAAK,IAAI,EAAE;IACf,OAAO,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;GAC5B;CACF;;;;;;AAMD,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;EACnC,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;CAC1D;;;;;;AAMD,SAAS,WAAW,CAAC,GAAG,EAAE;EACxB,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,IAAI,CAAC;CAC9B;;;;;;AAMD,SAAS,eAAe,CAAC,GAAG,EAAE;EAC5B,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;EACtB,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,IAAI,CAAC,GAAG,CAAC,CAAC;;EAEV,OAAO,GAAG,EAAE,EAAE;IACZ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GACxC;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;AAMD,SAAS,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;EACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;GAC7C,MAAM;IACL,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE;MAC/C,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC1C,OAAO,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5C,CAAC,CAAC;GACJ;CACF;;;;;;AAMD,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;EAClC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;GAC7C,MAAM;IACL,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE;MAC/C,OAAO,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3C,CAAC,CAAC;GACJ;CACF;;;;;;AAMD,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;EACnC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;EAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE;IAC/C,OAAO,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GAC9C,CAAC,CAAC;CACJ;;;;;;AAMD,SAAS,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;EACpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;GAC7C,MAAM;IACL,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE;MAC/C,OAAO,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7C,CAAC,CAAC;GACJ;CACF;;;;;;AAMD,SAAS,YAAY,GAAG;EACtB,OAAO,mFAAmF,CAAC;CAC5F;;;;;;AAMD,SAAS,UAAU,GAAG;EACpB,OAAO,oBAAoB,CAAC;CAC7B;;;;;;AAMD,SAAS,QAAQ,GAAG;EAClB,OAAO,eAAe,CAAC;CACxB;;AAED,IAAI,OAAO,CAAC;AACZ,IAAI,SAAS,CAAC;;;;;;;AAOd,SAAS,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE;EACvC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;EAC3B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,WAAW;MACjC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;CAClC;;;;;;AAMD,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE;EACpB,IAAI,GAAG,IAAI,IAAI,EAAE;IACf,OAAO,EAAE,CAAC;GACX;;EAED,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EACrB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;EACzB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEX,OAAO,EAAE,CAAC,GAAG,GAAG,EAAE;IAChB,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;GAC7B;;EAED,OAAO,GAAG,CAAC;CACZ;;;;;;AAMD,SAASS,QAAM,CAAC,GAAG,EAAE,EAAE,EAAE;EACvB,IAAI,GAAG,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;EAC3B,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;IAC5B,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAC;GACpE;;EAED,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EACrB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;EACtB,IAAI,CAAC,GAAG,CAAC,CAAC;;EAEV,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACtB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB;GACF;EACD,OAAO,GAAG,CAAC;CACZ;;AC9YD;;;;;;;AAOA,YAAc,GAAG,SAAS,cAAc,CAAC,GAAG,EAAE;EAC5C,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,6BAA6B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC3E,CAAC;;;;;;ACMF,IAAI,KAAK,GAAG;EACV,KAAK,EAAE,WAAW;EAClB,KAAK,EAAE,QAAQ;EACf,KAAK,EAAE,MAAM;EACb,KAAK,EAAE,kBAAkB;EACzB,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,aAAa;EACpB,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,aAAa;EACpB,KAAK,EAAE,sCAAsC;EAC7C,KAAK,EAAE,kBAAkB;EACzB,KAAK,EAAE,KAAK;EACZ,IAAI,GAAG,YAAY;EACnB,MAAM,EAAE,WAAW;CACpB,CAAC;;;;;;AAMF,YAAc,GAAG,QAAQ,CAAC;;AAE1B,SAAS,QAAQ,CAAC,GAAG,EAAE;EACrB,IAAI,CAACC,QAAc,CAAC,GAAG,CAAC,EAAE;IACxB,OAAO,GAAG,CAAC;GACZ;;EAED,IAAI,OAAO,GAAG,KAAK,CAAC;EACpB,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC5B,OAAO,GAAG,IAAI,CAAC;IACf,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACjC;EACD,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC5B,OAAO,GAAG,IAAI,CAAC;IACf,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACjC;;EAED,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACvB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACvB,IAAI,UAAU,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC;;EAEvC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;EAClD,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;EAC9B,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC;EACvB,IAAI,GAAG,GAAG,EAAE,CAAC;;;EAGb,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;MACrC,KAAK,GAAG,EAAE,CAAC;MACX,OAAO,GAAG,IAAI,CAAC;KAChB;;IAED,IAAI,MAAM,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;IAChC,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;;IAEtB,IAAI,EAAE,EAAE;MACN,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;KACnC,MAAM,IAAI,KAAK,EAAE;MAChB,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAC/B,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;UACtB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;SAChC,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;UAClB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;SAChC,MAAM;UACL,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;SAC1B;OACF,MAAM;QACL,IAAI,CAAC,KAAK,CAAC,EAAE;UACX,GAAG,IAAI,KAAK,CAAC;SACd,MAAM,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;UAC7B,GAAG,IAAI,KAAK,CAAC;SACd,MAAM;UACL,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;SACtC;OACF;KACF;GACF;;EAED,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC3B,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;EAC3B,IAAI,IAAI,GAAG,CAAC,EAAE;IACZ,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;IAC9B,IAAI,GAAG,CAAC,CAAC;GACV;EACD,IAAI,GAAG,EAAE;IACP,IAAI,EAAE,CAAC;IACP,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACzB,IAAI,UAAU,EAAE;QACd,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAC5B,MAAM;QACL,GAAG,IAAI,GAAG,CAAC;OACZ;KACF;IACD,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;GACvB;EACD,IAAI,GAAG,EAAE;IACP,IAAI,EAAE,CAAC;IACP,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACzB,IAAI,UAAU,EAAE;QACd,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;OAC5C,MAAM;QACL,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;KACF;IACD,MAAM,IAAI,GAAG,CAAC;GACf;;EAED,IAAI,IAAI,GAAG,CAAC,EAAE;IACZ,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;MACtD,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;KAC/B;GACF;;EAED,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;EAC7C,OAAO,MAAM,CAAC;CACf;;AAED,QAAQ,CAAC,MAAM,GAAG,SAAS,OAAO,EAAE;EAClC,IAAI;IACF,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;GACtC,CAAC,OAAO,GAAG,EAAE,EAAE;CACjB,CAAC;;AAEF,QAAQ,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,OAAO,EAAE;EACxC,IAAI;IACF,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC3C,CAAC,OAAO,GAAG,EAAE;IACZ,OAAO,KAAK,CAAC;GACd;CACF,CAAC;;AAEF,QAAQ,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE,OAAO,EAAE;EACtC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;EAC5B,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;EAEtB,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAClC,OAAO,CAAC,GAAG,GAAG,EAAE;IACd,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACnB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;MACjB,SAAS;KACV;IACD,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB;EACD,OAAO,GAAG,CAAC;CACZ,CAAC;;AClKF;;;;;;;AAOA,YAAc,GAAG,SAAS,SAAS,CAAC,GAAG,EAAE;EACvC,OAAO,OAAO,GAAG,KAAK,QAAQ;OACzB,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC5B,CAAC;;;;;;;ACIF,IAAI,EAAE;IAAEL,OAAK,GAAG,EAAE,CAAC;;;;;;AAMnB,YAAc,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBzB,SAAS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE;EAC1B,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAClB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;;;;EAIlB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;;;EAG5C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE;IACvD,IAAI,EAAE,KAAK,GAAG,EAAE;MACd,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;KAC3B;IACD,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC;GACxB,CAAC,CAAC;;;;EAIH,IAAI,GAAG,GAAG,GAAG;MACT,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;MACpB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;MACvB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;EAE1B,IAAIA,OAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;IAC7B,OAAOA,OAAK,CAAC,GAAG,CAAC,CAAC;GACnB;;EAED,IAAI,EAAE,EAAE,YAAY,MAAM,CAAC,EAAE;IAC3B,EAAE,GAAG,KAAK,EAAE,CAAC;GACd;;EAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;EACpB,IAAI,CAAC,CAAC;;EAEN,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACvB,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,IAAI,MAAM,KAAK,GAAG,EAAE;MAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACpB;;IAED,IAAI,EAAE,GAAG,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;;IAErC,CAAC,CAAC,EAAE,CAAC,GAAGH,MAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GAChC;;EAED,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;;;;EAKtB,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;GACrC;;EAED,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK;MACnBS,SAAO,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;MACxC,GAAG,CAAC;;EAER,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;EAGvC,QAAQN,OAAK,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE;CAC9B;;;;;;;;;;;AAWD,SAASH,MAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE;EAChC,IAAI,GAAG,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;;EAE/B,QAAQ,MAAM;IACZ,KAAK,GAAG;MACN,OAAO,KAAK,GAAG,KAAK,GAAG,OAAO,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;IACzD,KAAK,GAAG;MACN,OAAO,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;IAC7B,KAAK,GAAG;MACN,OAAO,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;IAC9B,KAAK,GAAG;MACN,OAAO,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;IACjD,KAAK,GAAG;MACN,OAAO,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;IAC9B;MACE,OAAO,KAAK,CAAC;GAChB;CACF;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE;EACnB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACtC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACjC,OAAO,GAAG,CAAC;CACZ;;;;;;AAMD,SAAS,KAAK,GAAG;EACf,OAAO,iCAAiC,CAAC;CAC1C;;;;;;AAMD,SAAS,MAAM,CAAC,GAAG,EAAE;EACnB,OAAO,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;CAC9B;;;;;;;;;;;;AAYD,SAASS,SAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;EAC7C,IAAI,MAAM,GAAG,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;EACjC,IAAI,KAAK,GAAG,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;EAChC,OAAO,IAAI,KAAK,GAAG,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;EAC1C,IAAI,SAAS,EAAE;IACb,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;GACpC;EACD,OAAO,IAAI,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC;CACrC;;ACjLD;;;;;;;;;AASA,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE;EACpC,OAAO,OAAO,GAAG,KAAK,QAAQ;QACxB,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;QACzBC,QAAS,CAAC,GAAG,CAAC,CAAC,CAAC;CACvB;;ACbD,IAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC;;AAEzC,YAAc,GAAG,UAAU,GAAG,EAAE;CAC/B,OAAO,eAAe,CAAC,GAAG,CAAC,EAAE;EAC5B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACvB;CACD,OAAO,GAAG,CAAC;CACX,CAAC;;AAEF,SAAS,eAAe,CAAC,GAAG,EAAE;CAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAC/B,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;CACpE;;ACZD;;;;;;;;;AASA,YAAc,GAAG,SAAS,aAAa,CAAC,GAAG,EAAE,aAAa,EAAE;EAC1D,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;GAC1C;EACD,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACnC,IAAI,aAAa,KAAK,KAAK,EAAE;IAC3B,GAAG,GAAGC,QAAuB,CAAC,GAAG,CAAC,CAAC;GACpC;EACD,OAAO,GAAG,CAAC;CACZ,CAAC;;AClBF;;;;;;;AAOA,AAEA,YAAc,GAAG,SAAS,YAAY,CAAC,GAAG,EAAE;EAC1C,OAAO,OAAO,GAAG,KAAK,WAAW,IAAI,GAAG,KAAK,IAAI;QAC3C,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,UAAU,CAAC,CAAC;CAC7D,CAAC;;ACZF;;;;;;;AAOA,AAEA,YAAc,GAAG,SAAS,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE;EAChD,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;IACnB,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,KAAK,EAAE;MAClD,MAAM;KACP;GACF;CACF,CAAC;;ACLF,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;AAE7C,YAAc,GAAG,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE;EACjDC,QAAK,CAAC,GAAG,EAAE,SAAS,GAAG,EAAE,GAAG,EAAE;IAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;MACzB,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7C;GACF,CAAC,CAAC;CACJ,CAAC;;ACNF,YAAc,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;EACxC,IAAI,CAAChB,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC;;EAE9B,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;EACxD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACjC,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC;;EAEjB,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;IAC9B,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;GACjB;;EAED,IAAI,UAAU,GAAG,OAAO,EAAE,KAAK,UAAU,CAAC;EAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE;IAC/B,OAAO,GAAG,CAAC;GACZ;;EAEDiB,QAAM,CAAC,GAAG,EAAE,SAAS,KAAK,EAAE,GAAG,EAAE;IAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;;MAE5B,IAAI,CAAC,UAAU,EAAE;QACf,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;OAClB,MAAM,IAAI,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;QAC9B,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;OAClB;KACF;GACF,CAAC,CAAC;EACH,OAAO,GAAG,CAAC;CACZ,CAAC;;AClCF,YAAc,GAAG,SAAS,UAAU,CAAC,GAAG,EAAE;CACzC,GAAG,IAAI,GAAG,CAAC;CACX,GAAG,CAAC,GAAG,GAAGP,aAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,CAAC,QAAQQ,QAAM,CAAC,GAAG,CAAC,EAAE;CACjD,OAAO,GAAG,CAAC;CACX,CAAC;;ACIF,YAAc,GAAG,SAAS,QAAQ,CAAC,OAAO,EAAE;EAC1C,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAC;GACpD;;EAED,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,GAAG,CAAC,IAAI,GAAGC,QAAM,CAAC,OAAO,CAAC,CAAC;EAC3B,GAAG,CAAC,MAAM,GAAGC,QAAM,CAAC,OAAO,CAAC,CAAC;;EAE7B,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE;IACpB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC9B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAC/B;GACF,MAAM;IACL,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;GACpB;;EAED,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;IACf,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG;QACvB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,OAAO,CAAC;GACb;;EAED,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IAClC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;GAC/B;EACD,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC9B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;GAC/B;EACD,OAAO,GAAG,CAAC;CACZ,CAAC;;AAEF,SAAS,OAAO,CAAC,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC;EACxC,OAAOV,aAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;CAC3B;;AClDD;;;;;;;AAOA,YAAc,GAAG,SAAS,GAAG,EAAE;EAC7B,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IAClE,OAAO,IAAI,CAAC;GACb;EACD,IAAI,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;EACjC,OAAO,KAAK,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,YAAY,KAAK,CAAC;CACzE,CAAC;;;;;;;;;;ACNF,YAAY,CAAC;;;;;;;;;;;AAWb,IAAI,KAAK,GAAG,oBAAoB,GAAG,EAAE,CAAC;;;;;;;;;;;;;;AActC,cAAc,GAAG,SAAS,SAAS,CAAC,IAAI,EAAE;EACxC,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;IAC9B,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;GACpB;;EAED,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;EAChB,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;;;EAGZ,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;EAEpB,IAAI,MAAM,GAAGW,QAAQ,CAAC,IAAI,CAAC,CAAC;EAC5B,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;;EAE5B,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;EACvB,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;EACvB,IAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;EAElC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;EACd,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;EACtB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAClC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;EAChE,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;EAC1D,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACtC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;EACrD,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;;EAElB,IAAID,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;IAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;MACzB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;KAC9B;IACD,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;GAC7B;;EAED,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE;IAChD,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;GAC9B;;EAED,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;EACzC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;IACd,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACpD,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACjD;;EAED,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACtC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;GACtC;;;EAGD,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAC9B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC9C,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAChD,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAChD,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;EAG9C,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EAC/B,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;EACjD,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,IAAI,IAAIE,QAAO,CAAC,IAAI,CAAC,CAAC;EACxC,GAAG,CAAC,EAAE,CAAC,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;EACrC,GAAG,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACtC,GAAG,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACtC,GAAG,CAAC,EAAE,CAAC,OAAO,IAAIC,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAIA,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC3E,GAAG,CAAC,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC3C,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;CAC5B,CAAA;;;;;;;;;;AAUD,SAAS,MAAM,CAAC,IAAI,EAAE;EACpB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7B,OAAO,IAAI,CAAC;GACb;EACD,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACpD,OAAO,IAAI,CAAC;GACb;EACD,OAAO,KAAK,CAAC;CACd;;;;;;;;;;AAUD,SAAS,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;EACzB,OAAO,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;CACtC;;;;;;AAMD,SAAS,MAAM,CAAC,GAAG,EAAE;EACnB,IAAI,EAAE,GAAG,6CAA6C,CAAC;EACvD,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;IACjE,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,QAAQ,CAAC;IACzC,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,MAAM,CAAC,EAAE;IAC9B,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;GAC7C,CAAC,CAAC;CACJ;;AAED,SAAS,GAAG,CAAC,GAAG,EAAE;EAChB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EACvC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACrC,OAAO,GAAG,CAAC;CACZ;;AAED,SAAS,QAAQ,CAAC,GAAG,EAAE;EACrB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACvC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACrC,OAAO,GAAG,CAAC;CACZ;;;AC3JD;;;;;;;AAOA;AAGA,YAAc,GAAG,SAAS,WAAW,CAAC,KAAK,EAAE;EAC3C,OAAO,KAAK,IAAI,IAAI,KAAK,OAAO,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC;CACpF,CAAC;;ACDF,YAAc,GAAG,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;EACtC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;EAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;;EAEzC,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC;EACpC,KAAK,GAAG,IAAI,CAAC,EAAE;IACb,QAAQ,EAAE,CAAC;IACX,IAAI,CAACC,QAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MACzE,OAAO,KAAK,CAAC;KACd;GACF;EACD,KAAK,GAAG,IAAI,CAAC,EAAE;IACb,QAAQ,EAAE,CAAC;GACZ;EACD,OAAO,QAAQ,KAAK,QAAQ,CAAC;CAC9B,CAAC;;ACfF,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAIjB,OAAK,GAAG,EAAE,CAAC;;;;;;AAMf,YAAc,GAAG,UAAU,CAAC;;;;;;;;;;;;AAY5B,SAAS,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;EACjC,IAAI,GAAG,GAAG,WAAW,EAAE,KAAK,EAAE,MAAM,CAAC;;EAErC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;IACjB,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;MAC5B,OAAO,EAAE,CAAC;KACX;IACD,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;GAC7C;;EAED,IAAI,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;EACvC,IAAI,QAAQ,EAAE;IACZ,IAAI,CAAC,IAAI,EAAE;MACT,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7C;IACD,GAAG,GAAG,GAAG,CAAC;GACX,MAAM;IACL,IAAI,GAAG,GAAG,CAAC;GACZ;;EAED,MAAM,GAAGA,OAAK,CAAC,GAAG,CAAC,CAAC;EACpB,IAAI,MAAM,IAAIkB,QAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;IACtC,OAAO,MAAM,CAAC,KAAK,CAAC;GACrB;;EAED,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC;EACzC,OAAO,KAAK,CAAC;CACd;;AAED,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;EAC9BlB,OAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CACzC;;;;;;AAMD,WAAoB,GAAGA,OAAK,CAAC;AAC7B,WAAoB,GAAG,KAAK,CAAC;;;;;;ACpE7B,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC;;;AAGpD,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;;;;;;AAM3B,KAAK,CAAC,IAAI,GAAGmB,OAAmB,CAAC;AACjC,KAAK,CAAC,MAAM,GAAGC,OAAuB,CAAC;AACvC,KAAK,CAAC,MAAM,GAAGC,OAAiB,CAAC;AACjC,KAAK,CAAC,QAAQ,GAAGC,QAA0B,CAAC;AAC5C,KAAK,CAAC,OAAO,GAAGC,QAAkB,CAAC;AACnC,KAAK,CAAC,SAAS,GAAGC,QAAqB,CAAC;AACxC,KAAK,CAAC,MAAM,GAAGC,QAAkB,CAAC;AAClC,KAAK,CAAC,MAAM,GAAGC,QAAkB,CAAC;AAClC,KAAK,CAAC,SAAS,GAAGC,QAAyB,CAAC;AAC5C,KAAK,CAAC,IAAI,GAAGC,QAAsB,CAAC;AACpC,KAAK,CAAC,SAAS,GAAGC,QAAqB,CAAC;AACxC,KAAK,CAAC,KAAK,GAAGC,QAAsB,CAAC;;;;;;;;;AASrC,KAAK,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,EAAE,EAAE;EACrC,IAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAACC,OAAM,EAAE,CAAC,CAAC;EAC7B,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;CACtB,CAAC;;;;;;;;;;AAUF,KAAK,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;EAC5C,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAClB,OAAO,SAAS,EAAE,EAAE;IAClB,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACxC,GAAG,IAAI,CAAC,MAAM,CAAC;MACb,OAAO,OAAO,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC,WAAW,EAAE,CAAC;KAC1D;IACD,OAAO,OAAO,KAAK,SAAS,CAAC;GAC9B,CAAC;CACH,CAAC;;;;;;;;;;AAUF,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE;EAC9C,OAAO,SAAS,EAAE,EAAE;IAClB,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;GACxD,CAAC;CACH,CAAC;;;;;;;;;;AAUF,KAAK,CAAC,SAAS,GAAG,SAAS,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE;EAClD,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;MAC3B,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;MAC5B,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EAChC,OAAO,EAAE,CAAC;CACX,CAAC;;;;;;;;;;AAUF,KAAK,CAAC,WAAW,GAAG,SAAS,WAAW,CAAC,EAAE,EAAE;EAC3C,OAAO,SAAS,EAAE,EAAE;IAClB,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC9B,OAAO,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC9B,CAAC;CACH,CAAC;;;;;;;;;AASF,KAAK,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;EACtC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;MACtB,CAAC,GAAG,CAAC;MACL,GAAG,CAAC;CACT,CAAC;;;;;;;AAOF,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE;EACzC,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO,EAAE,CAAC;EAC9C,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI5B,aAAI,CAAC,GAAG,KAAK,IAAI,EAAE;IAC/D,OAAO,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;GACnC;EACD,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;IAClC,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;GACzD;EACD,OAAO,EAAE,CAAC;CACX,CAAC;;;;;;AAMF,KAAK,CAAC,UAAU,GAAG,SAAS,UAAU,CAAC,EAAE,EAAE;EACzC,OAAO,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;CACrC,CAAC;;AAEF,KAAK,CAAC,YAAY,GAAG,SAAS,YAAY,CAAC,EAAE,EAAE;EAC7C,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;CAClC,CAAC;;AAEF,KAAK,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;EACtC,OAAO,GAAG,CAAC,OAAO,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;CACvD,CAAC;;;;;;AAMF,cAAc,GAAG,KAAK,CAAC;;;AClJvB,IAAI,KAAK,GAAG,EAAE;IAAE,KAAK;IAAE,IAAI,CAAC;;AAE5B,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE;EAClC,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,QAAQ,EAAE,GAAG,EAAE;IACxD,IAAI,MAAM,GAAG,SAAS,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC;IAC/C,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC/B,OAAO,QAAQ,CAAC;GACjB,EAAE,EAAE,CAAC,CAAC;CACR;;;;;;AAMD,KAAK,CAAC,WAAW,GAAG;EAClB,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;EACV,GAAG,EAAE,KAAK;CACX,CAAC;;;;;;AAMF,KAAK,CAAC,GAAG,GAAG;EACV,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,iBAAiB;EACtB,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,mBAAmB;CACzB,CAAC;;;;;;AAMF,KAAK,CAAC,KAAK,GAAG,KAAK,KAAK,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;;AAE1D,KAAK,CAAC,QAAQ,GAAG;EACf,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,kBAAkB;CACxB,CAAC;;AAEF,KAAK,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEtD,WAAc,GAAG,KAAK,CAAC;;;AClEvB,YAAY,CAAC;;;;;;;;;AASb,IAAI,IAAI,GAAG,cAAc,GAAG,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;EAC1D,IAAI,EAAE,IAAI,YAAY,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;GACnC;EACD,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;EAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;EAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CACpB,CAAC;;;;;;AAMF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,OAAO,EAAE;EACtC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;EACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;EAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC;EACjD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;CAC5B,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;EACnC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;IACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;GACtD;CACF,CAAC;;;;;;;;;AASF,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW;EACpC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY;IAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,OAAO,IAAI,CAAC;GACb;EACD,OAAO,KAAK,CAAC;CACd,CAAC;;;;;;;;;AASF,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;EACjC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,IAAI,EAAE;;IAEnE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;;IAGxC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE;MACrC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;KAC7B;;;IAGD,IAAI,QAAQ,GAAG6B,OAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACnC;CACF,CAAC;;;;;;AAMF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACnC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,EAAE;IACpC,IAAI,CAAC,OAAO,GAAGA,OAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GAC7C;CACF,CAAC;;;;;;AAMF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,WAAW;EAClC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,EAAE,OAAO;;EAE5C,IAAIA,OAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;IACjC,IAAI,CAAC,OAAO,GAAGA,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;GAC5D;CACF,CAAC;;;;;;AAMF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE;EACvC,IAAI,CAAC,MAAM,GAAGA,OAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EAC7D,OAAO,IAAI,CAAC,MAAM,CAAC;CACpB,CAAC;;;;;;;;;;;;;;;;AAgBF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE;EAC/C,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;EACrE,IAAI,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACvB,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;IACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAC9C,MAAM;IACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GAC3C;EACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;CACrB,CAAC;;;;;;;;;AASF,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE;EACpC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;EAC9B,IAAI,EAAE,GAAG,2BAA2B,CAAC;;EAErC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE;IAC9C,IAAI,CAAC,GAAGC,OAAK,CAAC,GAAG,CAAC;IAClB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACpB,IAAI,EAAE,EAAE;MACN,OAAO,EAAE,CAAC;KACX;IACD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;MACrB,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAChC;IACD,OAAO,EAAE,CAAC;GACX,CAAC,CAAC;;EAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;CAC9B,CAAC;;;;;;;;;AASF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,GAAG,EAAE;EACtC,IAAI,EAAE,GAAG,wBAAwB,CAAC;EAClC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE;IAC9C,OAAOA,OAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;GACtB,CAAC,CAAC;EACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CACpC,CAAC;;;;;;AAMF,SAAS,GAAG,CAAC,GAAG,EAAE;EAChB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChC,OAAO,GAAG,CAAC;CACZ;;AAED,SAAS,KAAK,CAAC,GAAG,EAAE;EAClB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAChC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAChC,OAAO,GAAG,CAAC;CACZ;;;;;;;AChLD,YAAc,GAAG,MAAM,CAAC;;;;;;;;;;;;AAYxB,SAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;EAChC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAI,SAAS,CAAC,mDAAmD,CAAC,CAAC;GAC1E;;EAED,IAAIC,OAAI,GAAG,IAAIC,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;EAC5C,IAAI,IAAI,GAAGD,OAAI,CAAC,OAAO,CAAC;;EAExB,IAAI,CAACF,OAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;IAC1BE,OAAI,CAAC,OAAO,GAAGA,OAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACxD,OAAOA,OAAI,CAAC;GACb;;EAEDA,OAAI,CAAC,OAAO,GAAGA,OAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;EAC3DA,OAAI,CAAC,OAAO,GAAGA,OAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;EAEnD,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;IAC1E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;GACpB;;EAED,IAAIA,OAAI,CAAC,OAAO,KAAK,IAAI,EAAE;IACzB,OAAO;MACL,OAAO,EAAE,KAAK,GAAG,IAAI;MACrB,MAAM,EAAE,GAAG;MACX,OAAO,EAAE,IAAI;KACd,CAAC;GACH;;EAED,IAAIA,OAAI,CAAC,OAAO,KAAK,GAAG,EAAE;IACxB,OAAO;MACL,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;MAC1B,MAAM,EAAE,GAAG;MACX,OAAO,EAAE,IAAI;KACd,CAAC;GACH;;;EAGDA,OAAI,CAAC,KAAK,EAAE,CAAC;EACb,IAAI,GAAG,GAAGA,OAAI,CAAC,MAAM,CAAC;EACtB,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;;EAG9B,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE;IACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;GACjB;;EAED,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE;IAClE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;GACjB;;;EAGD,IAAI,QAAQ,CAAC,IAAI,CAACA,OAAI,CAAC,OAAO,CAAC,EAAE;IAC/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;GACjB;;EAED,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC1B,IAAI,CAAC,OAAO,GAAGA,OAAI,CAAC,OAAO,CAAC;GAC7B;;;EAGD,IAAIA,OAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACpEA,OAAI,CAAC,OAAO,GAAG,IAAI,GAAGA,OAAI,CAAC,OAAO,CAAC;GACpC;;;;;;;EAODA,OAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;EAC5B,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE;IACjBA,OAAI,CAAC,MAAM,EAAE,CAAC;GACf;EACDA,OAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;;EAG3BA,OAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;EAC7B,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;IAClBA,OAAI,CAAC,OAAO,EAAE,CAAC;GAChB;EACDA,OAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;;;EAG5BA,OAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;EAC9B,IAAI,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE;IACnBA,OAAI,CAAC,QAAQ,EAAE,CAAC;GACjB;EACDA,OAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;;;EAG7BA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC1BA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EAC3BA,OAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAChCA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;EACrEA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;EACxEA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;;;EAGvCA,OAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;;;EAGxD,IAAIA,OAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACrCA,OAAI,CAAC,OAAO,GAAG,WAAW,CAACA,OAAI,CAAC,OAAO,CAAC,CAAC;GAC1C;;EAED,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAIA,OAAI,CAAC,OAAO,KAAK,IAAI,EAAE;IACpDA,OAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;GAEnC,MAAM;IACLA,OAAI,CAAC,OAAO,GAAG,OAAO,CAACA,OAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/CA,OAAI,CAAC,MAAM,CAACA,OAAI,CAAC,OAAO,CAAC,CAAC;;;IAG1B,IAAI,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE;MACnBA,OAAI,CAAC,OAAO,GAAG,QAAQ,CAACA,OAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;MAC7CA,OAAI,CAAC,OAAO,GAAG,QAAQ,CAACA,OAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;MAC7CA,OAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;MAClEA,OAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;;MAG/BA,OAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;MAClDA,OAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;;MAE9G,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;QACrBA,OAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;OAC7C;;;MAGD,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,EAAE,IAAI,aAAa,CAAC,IAAI,CAACA,OAAI,CAAC,IAAI,CAAC,EAAE;QAC5DA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;OAC/C;KACF;;;IAGDA,OAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;;IAExDA,OAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;IAEvCA,OAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;;IAExDA,OAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5CA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAClCA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;IAEhCA,OAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,KAAK,EAAE;MACpC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;MACvB,IAAI,GAAG,KAAK,CAAC,EAAE;QACb,OAAO,KAAK,CAAC;OACd;MACD,OAAO,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KAChC,CAAC,CAAC;;;IAGHA,OAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;;IAEtCA,OAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;;IAEvCA,OAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;;IAE7BA,OAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;GAChC;;;EAGDA,OAAI,CAAC,QAAQ,CAACA,OAAI,CAAC,OAAO,CAAC,CAAC;EAC5BA,OAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;;;EAGrCA,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;EAG5BA,OAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;;EAE/B,IAAIA,OAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3B,IAAI,SAAS,CAAC,IAAI,CAACA,OAAI,CAAC,OAAO,CAAC,EAAE;;MAEhCA,OAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,IAAIA,OAAI,CAAC,OAAO,CAAC;KAC7D;GACF;;EAED,OAAOA,OAAI,CAAC;CACb;;;;;;;;;;;;;;;AAeD,SAAS,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;EACzB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACxB,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;EAC5B,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;EACxC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;EAC7B,IAAI,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EACzB,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACrB;;;;;;;;;;;;;;AAcD,SAAS,WAAW,CAAC,GAAG,EAAE;EACxB,OAAO,GAAG,CAAC,OAAO,CAAC,kBAAkB,EAAE,SAAS,KAAK,EAAE,KAAK,EAAE;IAC5D,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC7B,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;KACvB;IACD,OAAO,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC;GAC3B,CAAC,CAAC;CACJ;;;;;;;;AAQD,SAAS,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EAC1B,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;EAChC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;;EAExC,IAAI,IAAI,KAAK,IAAI,EAAE;IACjB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC1B,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;GACpC;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;;;;AASD,IAAI,KAAK,SAAS,MAAM,CAAC;AACzB,IAAI,IAAI,UAAU,KAAK,GAAG,IAAI,CAAC;AAC/B,IAAI,KAAK,SAAS,cAAc,CAAC;AACjC,IAAI,WAAW,GAAG,0BAA0B,CAAC;AAC7C,IAAI,QAAQ,MAAM,KAAK,GAAG,WAAW,GAAG,QAAQ,CAAC;AACjD,IAAI,UAAU,IAAI,QAAQ,GAAG,WAAW,GAAG,OAAO,CAAC;;;;;;;;;AASnD,SAAS,OAAO,CAAC,OAAO,EAAE;EACxB,OAAO,OAAO,GAAG,KAAK,GAAG,WAAW,GAAG,QAAQ,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;CACzE;;AAED,SAAS,QAAQ,CAAC,OAAO,EAAE;EACzB,IAAI,OAAO,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE;EACnC,OAAO,yBAAyB,CAAC;CAClC;;;;;;;;;;;;ACzRD,SAAS,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;EACzC,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;EACnC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;EAElB,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE;IACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;GACnB;;EAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAC5B,OAAO,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;GACrC;;EAED,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;EACjC,IAAI,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC;;EAEzB,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACzB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,UAAU;MACjE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;KAC1D,MAAM;MACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;KACjD;GACF;EACD,OAAOF,OAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CAC/B;;;;;;;;;;;;;;;AAeD,SAAS,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;EACnC,IAAIA,OAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IAC7D,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC;GAC7D;;EAED,KAAK,GAAGA,OAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC9B,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;EAElB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;EAClC,IAAI,IAAI,GAAG,OAAO,CAAC;;EAEnB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACnC,IAAI,MAAM,EAAE;MACV,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5B;;;;IAID,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;MAC1B,MAAM,GAAG,KAAK,CAAC;KAChB;GACF;;EAED,IAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACtC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;EAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;;EAEb,OAAO,CAAC,GAAG,GAAG,EAAE;IACd,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACtB,IAAI,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;IAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE;IAChC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACd;;EAED,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;IACpB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;MAC1B,MAAM,IAAI,KAAK,CAAC,4CAA4C,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;KAC7E;;IAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;MAChC,GAAG,CAAC,IAAI,CAACA,OAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KACpC;GACF;;;EAGD,IAAI,MAAM,EAAE,EAAE,GAAG,GAAGA,OAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE;;;EAG7C,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;IACrC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACtB,IAAI,GAAGA,OAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpC,GAAG,GAAGA,OAAK,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;GACvD;;EAED,IAAI,IAAI,CAAC,OAAO,EAAE;IAChB,OAAOA,OAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAC1B;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;;;;;;;;;;;;AAiBD,SAAS,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE;EAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;IAC5D,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,mBAAmB,CAAC,CAAC,CAAC;GACrE;;EAED,QAAQ,GAAGA,OAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;EACpC,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;EACjC,IAAI,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;EACjC,OAAO,CAAC,GAAG,GAAG,EAAE;IACd,eAAe,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;GACnD;;EAED,OAAO,SAAS,EAAE,EAAE;IAClB,IAAI,EAAE,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;IAC1B,IAAI,GAAG,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,IAAI,CAAC;;IAEf,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7B,OAAO,CAAC,GAAG,GAAG,EAAE;MACd,IAAI,EAAE,GAAG,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9B,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACX,GAAG,GAAG,KAAK,CAAC;QACZ,MAAM;OACP;KACF;IACD,OAAO,GAAG,CAAC;GACZ,CAAC;CACH;;;;;;;;;;;;;;;;;;;AAmBD,SAAS,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAClC,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;IAC1B,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;GAC7D;;EAED,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EAC7B,IAAIA,OAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;IACtC,OAAO,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;GAC7B;EACD,OAAO,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;CACnC;;;;;;;AAOD,SAAS,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACnC,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;IAC1B,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;GAC7D;;EAED,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAClB,IAAI,CAAC,QAAQ,IAAI,OAAO,KAAK,EAAE,CAAC,CAAC;EACjC,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;EAE7B,IAAI,IAAI,CAAC,QAAQ,IAAI,CAACA,OAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;IAC3C,OAAO,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;GACnC;EACD,OAAO,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;CACnC;;;;;;;;;;;;AAYD,SAAS,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;EAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;IAC5D,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,mBAAmB,CAAC,CAAC,CAAC;GAClE;;EAED,QAAQ,GAAGA,OAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;EACpC,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;;EAE1B,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EAC7B,OAAO,GAAG,EAAE,EAAE;IACZ,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3C,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;MACf,OAAO,IAAI,CAAC;KACb;GACF;EACD,OAAO,KAAK,CAAC;CACd;;;;;;;;;;;AAWD,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;EACrC,IAAIA,OAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;IAClC,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC;GACtE;;EAED,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;EAChC,IAAI,GAAG,GAAG,EAAE,CAAC;;EAEb,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;IACnB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE;MACtC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB;GACF;EACD,OAAO,GAAG,CAAC;CACZ;;;;;;;;;;;AAWD,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE;;EAE9B,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;IACjC,OAAO,OAAO,CAAC;GAChB;;EAED,IAAI,OAAO,YAAY,MAAM,EAAE;IAC7B,OAAO,SAAS,EAAE,EAAE;MAClB,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzB,CAAC;GACH;;EAED,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,8BAA8B,CAAC,CAAC,CAAC;GAChF;;;EAGD,OAAO,GAAGA,OAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;;EAGvC,IAAI,CAACA,OAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;IAC1B,OAAOA,OAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GACvC;;EAED,IAAI,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;;EAG/B,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;IAC1B,OAAOA,OAAK,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;GACpC;;EAED,OAAO,SAAS,EAAE,EAAE;IAClB,EAAE,GAAGA,OAAK,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7B,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACpB,CAAC;CACH;;;;;;;;;;;;;;AAcD,SAAS,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE;;EAE9B,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;EACxC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;EAC7B,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IAC5C,KAAK,IAAI,GAAG,CAAC;GACd;;EAED,IAAI,MAAM,GAAG9B,QAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;EAGhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;EAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;EAC3B,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACtC,IAAI,EAAE,CAAC;;EAEP,IAAI;IACF,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7B,OAAO,EAAE,CAAC;GACX,CAAC,OAAO,GAAG,EAAE;IACZ,GAAG,CAAC,MAAM,GAAG,6BAA6B,GAAG,EAAE,GAAG,GAAG,CAAC;IACtD,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;GAC7C;;;;EAID,OAAO,IAAI,CAAC;CACb;;;;;;;;;;AAUD,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;EAC5B,IAAI,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;EACjD,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;EAChD,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;EACpC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACvB,OAAO,MAAM,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC;GAC1C;EACD,OAAO,MAAM,GAAG,IAAI,CAAC;CACtB;;;;;;;;;;;;AAYD,SAAS,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;EAC1B,IAAI8B,OAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;IACnC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;GACpD;EACD,OAAOA,OAAK,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CACzC;;;;;;;;;;;;;;;;;AAiBD,SAAS,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;EAC/B,OAAO,aAAa,GAAG,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,aAAa,GAAG,IAAI,GAAG,GAAG,CAAC;CAC5E;;;;;;;AAOD,UAAU,CAAC,GAAG,SAAS,GAAG,CAAC;AAC3B,UAAU,CAAC,MAAM,MAAM,UAAU,CAAC,WAAW,GAAGA,OAAK,CAAC,MAAM,CAAC;AAC7D,UAAU,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAChC,UAAU,CAAC,MAAM,MAAM9B,QAAM,CAAC;AAC9B,UAAU,CAAC,MAAM,MAAM,MAAM,CAAC;AAC9B,UAAU,CAAC,OAAO,KAAK,OAAO,CAAC;AAC/B,UAAU,CAAC,MAAM,MAAM,MAAM,CAAC;AAC9B,UAAU,CAAC,KAAK,OAAO,KAAK,CAAC;AAC7B,UAAU,CAAC,OAAO,KAAK,OAAO,CAAC;AAC/B,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;;;;;;AAMjC,SAAc,GAAG,UAAU,CAAC;;AC9Z5B,IAAI,UAAU,GAAG;CAChB,UAAU,EAAE,SAAS,UAAU,GAAG,KAAK,EAAE,KAAK,GAAG;EAChD,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;EACzB;;CAED,aAAa,EAAE,SAAS,aAAa,GAAG,KAAK,EAAE,KAAK,GAAG;EACtD,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE;GACzC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;GAC/C,CAAC,CAAC;EACH;;CAED,YAAY,EAAE,SAAS,YAAY,GAAG,KAAK,EAAE,KAAK,GAAG;EACpD,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,OAAO,EAAE;GAC1C,KAAK,OAAO,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE;GAChE,CAAC,CAAC;EACH;;CAED,WAAW,EAAE,SAAS,WAAW,GAAG,KAAK,EAAE,KAAK,GAAG;EAClD,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;EAC3D;;CAED,iBAAiB,EAAE,SAAS,iBAAiB,GAAG,KAAK,EAAE,KAAK,GAAG;EAC9D,OAAO,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;EAC1D;CACD,CAAC;;AAEF,SAAS,YAAY,GAAG,KAAK,GAAG;CAC/B,IAAI,KAAK,GAAG,EAAE,CAAC;;CAEf,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;CACzC,OAAO,KAAK,CAAC;CACb;;AAED,IAAI,KAAK,GAAG,SAAS,KAAK,GAAG,OAAO,GAAG;CACtC,IAAI,MAAM,GAAG,IAAI,CAAC;;CAElB,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;CAExB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;CAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;;CAEpC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;;CAE1C,KAAK,OAAO,CAAC,MAAM,GAAG;EACrB,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,KAAK,EAAE;GACxC,YAAY,EAAE,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE;IAC9C,MAAM,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;IACnC,CAAC,CAAC;GACH,CAAC,CAAC;EACH;CACD,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,cAAc,GAAG,IAAI,EAAE,kBAAkB,EAAE,KAAK,GAAG;EAC3F,IAAI,MAAM,GAAG,IAAI,CAAC;;CAEnB,KAAK,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,GAAG;;;EAG/C,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;EAC9D,MAAM;EACN,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE;GAChD,MAAM,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;GACnC,CAAC,CAAC;EACH;CACD,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAG,IAAI,GAAG;CACrD,OAAO,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE;WACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC;CAC/D,CAAC;;;AAGF,AAyEA,SAAS,WAAW,GAAG,KAAK,GAAG;CAC9B,KAAK,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,KAAK,CAAC,EAAE;CAC/C,KAAK,KAAK,IAAI,SAAS,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;CACxC,OAAO,EAAE,KAAK,EAAE,CAAC;CACjB;;AAED,SAAS,YAAY,GAAG,OAAO,EAAE,OAAO,GAAG;CAC1C,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE,EAAE,SAAS,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEkC,KAAE,CAAC,OAAO,EAAEC,YAAO,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;CAC3G,OAAO,GAAG,WAAW,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC;CACnD,OAAO,GAAG,WAAW,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,UAAU,EAAE,CAAC;;CAEnD,OAAO,WAAW,EAAE,GAAG;;EAEtB,KAAK,OAAO,EAAE,KAAK,QAAQ,GAAG,EAAE,OAAO,KAAK,CAAC,EAAE;EAC/C,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,KAAK,CAAC,EAAE;;EAExC,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE3C,QAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;;EAEjC,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG;GAC1C,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;GACzB,KAAK,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,KAAK,CAAC,EAAE;GAC3C;;EAED,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,GAAG;GAChD,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;GAC7B,KAAK,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;GAC5C;;EAED,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;EACvB,CAAC;CACF;;AAED,SAAS,QAAQ,GAAG,GAAG,GAAG;CACzB,OAAO,GAAG,YAAY,MAAM,CAAC;CAC7B;;AAED,IAAI,aAAa,GAAG,uRAAuR,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;AACzT,IAAI,QAAQ,GAAG,miBAAmiB,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;;AAEhkB,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;AACxC,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,EAAE,OAAO,WAAW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,AAEnG,AAUA,AAAyE;;ACrN1D,SAAS,OAAO,CAAC,GAAG,CAAC;EAClC,IAAI,IAAI,GAAG,aAAa;IACtB,IAAI,GAAG,CAAC;IACR,UAAU,GAAG,EAAE;IACf,WAAW,GAAG,EAAE;;IAEhB,QAAQ,GAAG,wBAAwB;IACnC,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;IACnC,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM;IACxC,aAAa,GAAG,aAAa,CAAC,KAAK;IACnC,WAAW,GAAG,aAAa,GAAG,cAAc;;IAE5C,MAAM,GAAG,sBAAsB;IAC/B,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IAC/B,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM;IACpC,WAAW,GAAG,WAAW,CAAC,KAAK;IAC/B,WAAW,GAAG,WAAW,GAAG,YAAY;;IAExC,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;;EAElD,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;;EAEnE,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IAC1B,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACjC,OAAO,OAAO,EAAE;IACd,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC;MAC1C,KAAK,GAAG,CAAC;MACT,QAAQ,GAAG,KAAK;MAChB,QAAQ,GAAG,IAAI;MACf,KAAK,GAAG,KAAK,CAAC;;IAEhB,UAAU,IAAI,GAAG,CAAC;;IAElB,KAAK,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE;MACrE,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;QACvB,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QACxC,aAAa,GAAG,CAAC,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;QAC1C,WAAW,GAAG,QAAQ,IAAI,OAAO,KAAK,QAAQ;QAC9C,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;;MAE/C,IAAI,CAAC,aAAa,IAAI,WAAW,KAAK,CAAC,OAAO,EAAE;QAC9C,QAAQ,GAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,QAAQ,EAAE;UACX,QAAQ,GAAG,OAAO,CAAC;SACpB;YACG;UACF,QAAQ,GAAG,IAAI,CAAC;SACjB;OACF;;MAED,IAAI,CAAC,QAAQ,EAAE;QACb,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;UACrB,KAAK,GAAG,IAAI,CAAC;UACb,EAAE,KAAK,CAAC;SACT;aACI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;UAC1B,EAAE,KAAK,CAAC;SACT;OACF;MACD,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE;QACxB,MAAM;OACP;KACF;IACD,OAAO,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;MACxD,IAAI,EAAE,CAAC;KACR;;IAED,WAAW,IAAI,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAClD,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC1B;EACD,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;EAClC,OAAO;IACL,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,WAAW;GACnB,CAAC;CACH;;ACnED;AACA,AAAO,SAAS,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;EACzD,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;IAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;GAChD,CAAC,CAAC;CACJ;;AAED,AAAO,SAAS,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE;EACzE,GAAG,OAAO,EAAE;IACV,GAAG,CAAC,WAAW,EAAE;MACf,OAAO,CAAC,IAAI,CAAC,+BAA+B,GAAG,OAAO,CAAC,CAAC;KACzD;QACG;MACF,QAAQ,IAAI,SAAS,EAAE,EAAE;QACvB,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;OACxC,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;KACzB;GACF;EACD,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;CAC7C;;AAED,AAAO,SAAS,YAAY,CAAC,OAAO,EAAE;EACpC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;EAExB,IAAI,MAAM,GAAG,YAAY,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;IAC3D,aAAa,GAAG,EAAE,CAAC;;EAErB,OAAO;IACL,IAAI,EAAE,OAAO;;IAEb,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG;MACrB,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QAC1E,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACxB,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC;QAC1B,OAAO,GAAG,CAAC,IAAI,CAAC;OACjB;KACF;;IAED,OAAO,CAAC,OAAO,EAAE;MACf,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC;MAClE,OAAO,IAAI,OAAO,CAAC,SAAS2C,UAAO,EAAE,MAAM,EAAE;QAC3C,GAAG,CAAC,aAAa,EAAE;UACjB,OAAO,CAAC,IAAI,CAAC,+BAA+B,GAAG,OAAO,CAAC,CAAC;UACxDA,UAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvB;YACG;UACF,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU;YAC7CA,UAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;WACvB,CAAC,CAAC;SACJ;OACF,CAAC,CAAC;KACJ;GACF,CAAC;CACH,AAAC;;;;;;;;;"}